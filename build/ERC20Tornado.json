{
  "contractName": "ERC20Tornado",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IVerifier",
          "name": "_verifier",
          "type": "address"
        },
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_denomination",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_merkleTreeHeight",
          "type": "uint32"
        },
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "commitment",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "leafIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "nullifierHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROOT_HISTORY_SIZE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "denomination",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_commitment",
          "type": "bytes32"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasher",
      "outputs": [
        {
          "internalType": "contract IHasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        }
      ],
      "name": "isSpent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_nullifierHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "isSpentArray",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "spent",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nullifierHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "contract IVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_refund",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"_verifier\",\"type\":\"address\"},{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_denomination\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_merkleTreeHeight\",\"type\":\"uint32\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"leafIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"nullifierHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_HISTORY_SIZE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRootIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"denomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_commitment\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasher\",\"outputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"isKnownRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"}],\"name\":\"isSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_nullifierHashes\",\"type\":\"bytes32[]\"}],\"name\":\"isSpentArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"spent\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nullifierHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refund\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(bytes32)\":{\"details\":\"Deposit funds into the contract. The caller must send (for ETH) or approve (for ERC20) value equal to or `denomination` of this instance.\",\"params\":{\"_commitment\":\"the note commitment, which is PedersenHash(nullifier + secret)\"}},\"getLastRoot()\":{\"details\":\"Returns the last root\"},\"hashLeftRight(address,bytes32,bytes32)\":{\"details\":\"Hash 2 tree leaves, returns MiMC(_left, _right)\"},\"isKnownRoot(bytes32)\":{\"details\":\"Whether the root is present in the root history\"},\"isSpent(bytes32)\":{\"details\":\"whether a note is already spent \"},\"isSpentArray(bytes32[])\":{\"details\":\"whether an array of notes is already spent \"},\"withdraw(bytes,bytes32,bytes32,address,address,uint256,uint256)\":{\"details\":\"Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)\"},\"zeros(uint256)\":{\"details\":\"provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/gautam/Documents/semilla-contracts/contracts/ERC20Tornado.sol\":\"ERC20Tornado\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/gautam/Documents/semilla-contracts/contracts/ERC20Tornado.sol\":{\"keccak256\":\"0x6308054f1399c583b73d7031bbb93883088682667dd864ebf2efc52432762678\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce5f00889da8904e93ddf1a95512cc478ef945ecd0ac851517535e2f74c304ef\",\"dweb:/ipfs/QmRawJzcCgGbU9vSx7RvrBZkmvom478VXg69uJ1RGbJhoa\"]},\"/Users/gautam/Documents/semilla-contracts/contracts/MerkleTreeWithHistory.sol\":{\"keccak256\":\"0x13ab1ee963f427b843baf6d0c1ef04db7c4dbea2a27b59f584e4433235b59a1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8c5ca76ea199d5228c739db25600b51fc540ea63089c9bb9aa65a85088f55df\",\"dweb:/ipfs/QmNq3znvEBj7arHLXfysiQRiLCRCaaHcg6c881PysFvvCu\"]},\"/Users/gautam/Documents/semilla-contracts/contracts/Tornado.sol\":{\"keccak256\":\"0x4f8c052a7f9d41a7022f4f559f4dff4d2200d3f90e4fe6a8d8a24e88cce1c9a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d97d188f672d2b3531c6227d0089e54e535d5772a7fcd83ab79b066af8532e6\",\"dweb:/ipfs/QmUiggeED8vv5QXJ4cTB3oC84tawRAYA3eYtx9qRMwcE6n\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182\",\"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK\"]}},\"version\":1}",
  "bytecode": "0x60c06040526000600360006101000a81548163ffffffff021916908363ffffffff1602179055506000600360046101000a81548163ffffffff021916908363ffffffff1602179055503480156200005557600080fd5b50604051620030ef380380620030ef833981810160405260a08110156200007b57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505084848484808360008263ffffffff16116200011b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180620030cc6023913960400191505060405180910390fd5b60208263ffffffff161062000198576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5f6c6576656c732073686f756c64206265206c657373207468616e203332000081525060200191505060405180910390fd5b816000806101000a81548163ffffffff021916908363ffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060005b8263ffffffff168163ffffffff16101562000249576200021e8163ffffffff166200036e60201b60201c565b600160008363ffffffff168152602001908152602001600020819055508080600101915050620001f2565b50620002646001830363ffffffff166200036e60201b60201c565b60026000808152602001908152602001600020819055505050600160048190555060008211620002e0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180620030a76025913960400191505060405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050816005819055505050505080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505062000aa0565b600080821415620003a5577f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60001b905062000a9b565b6001821415620003db577f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d60001b905062000a9b565b600282141562000411577f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20060001b905062000a9b565b600382141562000447577f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb60001b905062000a9b565b60048214156200047d577f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c960001b905062000a9b565b6005821415620004b3577f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495960001b905062000a9b565b6006821415620004e9577f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c60001b905062000a9b565b60078214156200051f577f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb460001b905062000a9b565b600882141562000555577f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8060001b905062000a9b565b60098214156200058a577e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00760001b905062000a9b565b600a821415620005c0577f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3060001b905062000a9b565b600b821415620005f6577f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e560001b905062000a9b565b600c8214156200062c577f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f60001b905062000a9b565b600d82141562000662577f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd60001b905062000a9b565b600e82141562000698577f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10860001b905062000a9b565b600f821415620006ce577f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b660001b905062000a9b565b601082141562000704577f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185460001b905062000a9b565b60118214156200073a577f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea60001b905062000a9b565b601282141562000770577f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d60001b905062000a9b565b6013821415620007a6577f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0560001b905062000a9b565b6014821415620007dc577f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d460001b905062000a9b565b601582141562000812577f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296760001b905062000a9b565b601682141562000848577f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345360001b905062000a9b565b60178214156200087e577f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4860001b905062000a9b565b6018821415620008b4577f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd160001b905062000a9b565b6019821415620008ea577f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c60001b905062000a9b565b601a82141562000920577f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9960001b905062000a9b565b601b82141562000956577f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35460001b905062000a9b565b601c8214156200098b577e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d60001b905062000a9b565b601d821415620009c1577f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42760001b905062000a9b565b601e821415620009f7577f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb60001b905062000a9b565b601f82141562000a2d577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc60001b905062000a9b565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b919050565b60805160601c60a05160601c6125d362000ad460003980610a2b5280610cc3525080611a6b5280611df352506125d36000f3fe6080604052600436106101355760003560e01c8063b214faa5116100ab578063e82955881161006f578063e829558814610685578063ec732959146106d4578063ed33639f146106ff578063f178e47c14610740578063fc0c546a1461078f578063fc7e9c6f146107d057610135565b8063b214faa51461055b578063ba70f75714610589578063c2b40ae4146105b4578063cd87a3b414610603578063e5285dcc1461063457610135565b80636d9833e3116100fd5780636d9833e314610309578063839df9451461035a5780638bca6d16146103ab5780638ea3099e146103d657806390eeb02b1461044f5780639fa12d0b1461048057610135565b806317cc915c1461013a57806321a0adb61461018b5780632b7ac3f31461026c578063414a37ba146102ad5780634ecf518b146102d8575b600080fd5b34801561014657600080fd5b506101736004803603602081101561015d57600080fd5b8101908080359060200190929190505050610801565b60405180821515815260200191505060405180910390f35b61026a600480360360e08110156101a157600080fd5b81019080803590602001906401000000008111156101be57600080fd5b8201836020820111156101d057600080fd5b803590602001918460018302840111640100000000831117156101f257600080fd5b90919293919293908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610821565b005b34801561027857600080fd5b50610281610cc1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102b957600080fd5b506102c2610ce5565b6040518082815260200191505060405180910390f35b3480156102e457600080fd5b506102ed610d09565b604051808263ffffffff16815260200191505060405180910390f35b34801561031557600080fd5b506103426004803603602081101561032c57600080fd5b8101908080359060200190929190505050610d1d565b60405180821515815260200191505060405180910390f35b34801561036657600080fd5b506103936004803603602081101561037d57600080fd5b8101908080359060200190929190505050610db9565b60405180821515815260200191505060405180910390f35b3480156103b757600080fd5b506103c0610dd9565b6040518082815260200191505060405180910390f35b3480156103e257600080fd5b50610439600480360360608110156103f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610ddf565b6040518082815260200191505060405180910390f35b34801561045b57600080fd5b50610464611087565b604051808263ffffffff16815260200191505060405180910390f35b34801561048c57600080fd5b50610504600480360360208110156104a357600080fd5b81019080803590602001906401000000008111156104c057600080fd5b8201836020820111156104d257600080fd5b803590602001918460208302840111640100000000831117156104f457600080fd5b909192939192939050505061109d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561054757808201518184015260208101905061052c565b505050509050019250505060405180910390f35b6105876004803603602081101561057157600080fd5b810190808035906020019092919050505061114e565b005b34801561059557600080fd5b5061059e6112d9565b6040518082815260200191505060405180910390f35b3480156105c057600080fd5b506105ed600480360360208110156105d757600080fd5b810190808035906020019092919050505061130c565b6040518082815260200191505060405180910390f35b34801561060f57600080fd5b50610618611324565b604051808263ffffffff16815260200191505060405180910390f35b34801561064057600080fd5b5061066d6004803603602081101561065757600080fd5b8101908080359060200190929190505050611329565b60405180821515815260200191505060405180910390f35b34801561069157600080fd5b506106be600480360360208110156106a857600080fd5b8101908080359060200190929190505050611353565b6040518082815260200191505060405180910390f35b3480156106e057600080fd5b506106e9611a45565b6040518082815260200191505060405180910390f35b34801561070b57600080fd5b50610714611a69565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561074c57600080fd5b506107796004803603602081101561076357600080fd5b8101908080359060200190929190505050611a8d565b6040518082815260200191505060405180910390f35b34801561079b57600080fd5b506107a4611aa5565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107dc57600080fd5b506107e5611acb565b604051808263ffffffff16815260200191505060405180910390f35b60066020528060005260406000206000915054906101000a900460ff1681565b6002600454141561089a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b600260048190555060055482111561091a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4665652065786365656473207472616e736665722076616c756500000000000081525060200191505060405180910390fd5b6006600086815260200190815260200160002060009054906101000a900460ff16156109ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f546865206e6f746520686173206265656e20616c7265616479207370656e740081525060200191505060405180910390fd5b6109b786610d1d565b610a29576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f740000000081525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663695ef6f989896040518060c001604052808b60001c81526020018a60001c81526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b83811015610b04578082015181840152602081019050610ae9565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b158015610b5657600080fd5b505af1158015610b6a573d6000803e3d6000fd5b505050506040513d6020811015610b8057600080fd5b8101908080519060200190929190505050610c03576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c69642077697468647261772070726f6f660000000000000000000081525060200191505060405180910390fd5b60016006600087815260200190815260200160002060006101000a81548160ff021916908315150217905550610c3b84848484611ae1565b8273ffffffffffffffffffffffffffffffffffffffff167fe9e508bad6d4c3227e881ca19068f099da81b5164dd6d62b2eaf1e8bc6c34931858785604051808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a260016004819055505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b60008054906101000a900463ffffffff1681565b60008060001b821415610d335760009050610db4565b6000600360009054906101000a900463ffffffff16905060008190505b600260008263ffffffff16815260200190815260200160002054841415610d7c57600192505050610db4565b60008163ffffffff161415610d9057601e90505b8080600190039150508163ffffffff168163ffffffff161415610d50576000925050505b919050565b60076020528060005260406000206000915054906101000a900460ff1681565b60055481565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018360001c10610e79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5f6c6566742073686f756c6420626520696e7369646520746865206669656c6481525060200191505060405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018260001c10610ef4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806124d26021913960400191505060405180910390fd5b60008360001c905060008573ffffffffffffffffffffffffffffffffffffffff1663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b158015610f5657600080fd5b505afa158015610f6a573d6000803e3d6000fd5b505050506040513d6040811015610f8057600080fd5b81019080805190602001909291908051906020019092919050505080925081935050507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180610fcb57fe5b8460001c830891508573ffffffffffffffffffffffffffffffffffffffff1663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b15801561102b57600080fd5b505afa15801561103f573d6000803e3d6000fd5b505050506040513d604081101561105557600080fd5b81019080805190602001909291908051906020019092919050505080925081935050508160001b925050509392505050565b600360009054906101000a900463ffffffff1681565b60608282905067ffffffffffffffff811180156110b957600080fd5b506040519080825280602002602001820160405280156110e85781602001602082028036833780820191505090505b50905060005b838390508110156111475761111484848381811061110857fe5b90506020020135611329565b1561113a57600182828151811061112757fe5b6020026020010190151590811515815250505b80806001019150506110ee565b5092915050565b600260045414156111c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b60026004819055506007600082815260200190815260200160002060009054906101000a900460ff1615611246576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806124f36021913960400191505060405180910390fd5b600061125182611ca8565b905060016007600084815260200190815260200160002060006101000a81548160ff021916908315150217905550611287611edd565b817fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff1968242604051808363ffffffff1681526020018281526020019250505060405180910390a250600160048190555050565b600060026000600360009054906101000a900463ffffffff1663ffffffff16815260200190815260200160002054905090565b60026020528060005260406000206000915090505481565b601e81565b60006006600083815260200190815260200160002060009054906101000a900460ff169050919050565b600080821415611388577f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60001b9050611a40565b60018214156113bc577f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d60001b9050611a40565b60028214156113f0577f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20060001b9050611a40565b6003821415611424577f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb60001b9050611a40565b6004821415611458577f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c960001b9050611a40565b600582141561148c577f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495960001b9050611a40565b60068214156114c0577f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c60001b9050611a40565b60078214156114f4577f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb460001b9050611a40565b6008821415611528577f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8060001b9050611a40565b600982141561155b577e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00760001b9050611a40565b600a82141561158f577f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3060001b9050611a40565b600b8214156115c3577f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e560001b9050611a40565b600c8214156115f7577f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f60001b9050611a40565b600d82141561162b577f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd60001b9050611a40565b600e82141561165f577f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10860001b9050611a40565b600f821415611693577f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b660001b9050611a40565b60108214156116c7577f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185460001b9050611a40565b60118214156116fb577f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea60001b9050611a40565b601282141561172f577f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d60001b9050611a40565b6013821415611763577f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0560001b9050611a40565b6014821415611797577f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d460001b9050611a40565b60158214156117cb577f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296760001b9050611a40565b60168214156117ff577f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345360001b9050611a40565b6017821415611833577f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4860001b9050611a40565b6018821415611867577f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd160001b9050611a40565b601982141561189b577f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c60001b9050611a40565b601a8214156118cf577f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9960001b9050611a40565b601b821415611903577f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35460001b9050611a40565b601c821415611936577e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d60001b9050611a40565b601d82141561196a577f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42760001b9050611a40565b601e82141561199e577f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb60001b9050611a40565b601f8214156119d2577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc60001b9050611a40565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b919050565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020528060005260406000206000915090505481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360049054906101000a900463ffffffff1681565b803414611b39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061247c6030913960400191505060405180910390fd5b611b8a848360055403600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611f899092919063ffffffff16565b6000821115611be157611be08383600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611f899092919063ffffffff16565b5b6000811115611ca25760008473ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d8060008114611c4a576040519150601f19603f3d011682016040523d82523d6000602084013e611c4f565b606091505b5050905080611ca0578373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015611c9e573d6000803e3d6000fd5b505b505b50505050565b600080600360049054906101000a900463ffffffff16905060008054906101000a900463ffffffff1663ffffffff16600263ffffffff160a63ffffffff168163ffffffff161415611d44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061256e6030913960400191505060405180910390fd5b6000819050600084905060008060005b60008054906101000a900463ffffffff1663ffffffff168163ffffffff161015611e3b57600060028663ffffffff1681611d8a57fe5b0663ffffffff161415611dce57839250611da98163ffffffff16611353565b915083600160008363ffffffff16815260200190815260200160002081905550611dee565b600160008263ffffffff1681526020019081526020016000205492508391505b611e197f00000000000000000000000000000000000000000000000000000000000000008484610ddf565b935060028563ffffffff1681611e2b57fe5b0494508080600101915050611d54565b506000601e63ffffffff166001600360009054906101000a900463ffffffff160163ffffffff1681611e6957fe5b06905080600360006101000a81548163ffffffff021916908363ffffffff16021790555083600260008363ffffffff1681526020019081526020016000208190555060018601600360046101000a81548163ffffffff021916908363ffffffff160217905550859650505050505050919050565b60003414611f36576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806125146030913960400191505060405180910390fd5b611f873330600554600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661202b909392919063ffffffff16565b565b6120268363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120ec565b505050565b6120e6846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120ec565b50505050565b606061214e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166121db9092919063ffffffff16565b90506000815111156121d65780806020019051602081101561216f57600080fd5b81019080805190602001909291905050506121d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612544602a913960400191505060405180910390fd5b5b505050565b60606121ea84846000856121f3565b90509392505050565b60608247101561224e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806124ac6026913960400191505060405180910390fd5b6122578561239c565b6122c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061231957805182526020820191506020810190506020830392506122f6565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461237b576040519150601f19603f3d011682016040523d82523d6000602084013e612380565b606091505b50915091506123908282866123af565b92505050949350505050565b600080823b905060008111915050919050565b606083156123bf57829050612474565b6000835111156123d25782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561243957808201518184015260208101905061241e565b50505050905090810190601f1680156124665780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe496e636f727265637420726566756e6420616d6f756e742072656365697665642062792074686520636f6e7472616374416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5f72696768742073686f756c6420626520696e7369646520746865206669656c6454686520636f6d6d69746d656e7420686173206265656e207375626d69747465644554482076616c756520697320737570706f73656420746f206265203020666f7220455243323020696e7374616e63655361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565644d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e206265206164646564a2646970667358221220248de93afec6e74d34879eda2eca6a4c034fd8c9bbcb7946c3aed78b82de8ce264736f6c6343000700003364656e6f6d696e6174696f6e2073686f756c642062652067726561746572207468616e20305f6c6576656c732073686f756c642062652067726561746572207468616e207a65726f",
  "deployedBytecode": "0x6080604052600436106101355760003560e01c8063b214faa5116100ab578063e82955881161006f578063e829558814610685578063ec732959146106d4578063ed33639f146106ff578063f178e47c14610740578063fc0c546a1461078f578063fc7e9c6f146107d057610135565b8063b214faa51461055b578063ba70f75714610589578063c2b40ae4146105b4578063cd87a3b414610603578063e5285dcc1461063457610135565b80636d9833e3116100fd5780636d9833e314610309578063839df9451461035a5780638bca6d16146103ab5780638ea3099e146103d657806390eeb02b1461044f5780639fa12d0b1461048057610135565b806317cc915c1461013a57806321a0adb61461018b5780632b7ac3f31461026c578063414a37ba146102ad5780634ecf518b146102d8575b600080fd5b34801561014657600080fd5b506101736004803603602081101561015d57600080fd5b8101908080359060200190929190505050610801565b60405180821515815260200191505060405180910390f35b61026a600480360360e08110156101a157600080fd5b81019080803590602001906401000000008111156101be57600080fd5b8201836020820111156101d057600080fd5b803590602001918460018302840111640100000000831117156101f257600080fd5b90919293919293908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610821565b005b34801561027857600080fd5b50610281610cc1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102b957600080fd5b506102c2610ce5565b6040518082815260200191505060405180910390f35b3480156102e457600080fd5b506102ed610d09565b604051808263ffffffff16815260200191505060405180910390f35b34801561031557600080fd5b506103426004803603602081101561032c57600080fd5b8101908080359060200190929190505050610d1d565b60405180821515815260200191505060405180910390f35b34801561036657600080fd5b506103936004803603602081101561037d57600080fd5b8101908080359060200190929190505050610db9565b60405180821515815260200191505060405180910390f35b3480156103b757600080fd5b506103c0610dd9565b6040518082815260200191505060405180910390f35b3480156103e257600080fd5b50610439600480360360608110156103f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610ddf565b6040518082815260200191505060405180910390f35b34801561045b57600080fd5b50610464611087565b604051808263ffffffff16815260200191505060405180910390f35b34801561048c57600080fd5b50610504600480360360208110156104a357600080fd5b81019080803590602001906401000000008111156104c057600080fd5b8201836020820111156104d257600080fd5b803590602001918460208302840111640100000000831117156104f457600080fd5b909192939192939050505061109d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561054757808201518184015260208101905061052c565b505050509050019250505060405180910390f35b6105876004803603602081101561057157600080fd5b810190808035906020019092919050505061114e565b005b34801561059557600080fd5b5061059e6112d9565b6040518082815260200191505060405180910390f35b3480156105c057600080fd5b506105ed600480360360208110156105d757600080fd5b810190808035906020019092919050505061130c565b6040518082815260200191505060405180910390f35b34801561060f57600080fd5b50610618611324565b604051808263ffffffff16815260200191505060405180910390f35b34801561064057600080fd5b5061066d6004803603602081101561065757600080fd5b8101908080359060200190929190505050611329565b60405180821515815260200191505060405180910390f35b34801561069157600080fd5b506106be600480360360208110156106a857600080fd5b8101908080359060200190929190505050611353565b6040518082815260200191505060405180910390f35b3480156106e057600080fd5b506106e9611a45565b6040518082815260200191505060405180910390f35b34801561070b57600080fd5b50610714611a69565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561074c57600080fd5b506107796004803603602081101561076357600080fd5b8101908080359060200190929190505050611a8d565b6040518082815260200191505060405180910390f35b34801561079b57600080fd5b506107a4611aa5565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107dc57600080fd5b506107e5611acb565b604051808263ffffffff16815260200191505060405180910390f35b60066020528060005260406000206000915054906101000a900460ff1681565b6002600454141561089a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b600260048190555060055482111561091a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4665652065786365656473207472616e736665722076616c756500000000000081525060200191505060405180910390fd5b6006600086815260200190815260200160002060009054906101000a900460ff16156109ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f546865206e6f746520686173206265656e20616c7265616479207370656e740081525060200191505060405180910390fd5b6109b786610d1d565b610a29576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f740000000081525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663695ef6f989896040518060c001604052808b60001c81526020018a60001c81526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b83811015610b04578082015181840152602081019050610ae9565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b158015610b5657600080fd5b505af1158015610b6a573d6000803e3d6000fd5b505050506040513d6020811015610b8057600080fd5b8101908080519060200190929190505050610c03576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c69642077697468647261772070726f6f660000000000000000000081525060200191505060405180910390fd5b60016006600087815260200190815260200160002060006101000a81548160ff021916908315150217905550610c3b84848484611ae1565b8273ffffffffffffffffffffffffffffffffffffffff167fe9e508bad6d4c3227e881ca19068f099da81b5164dd6d62b2eaf1e8bc6c34931858785604051808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a260016004819055505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b60008054906101000a900463ffffffff1681565b60008060001b821415610d335760009050610db4565b6000600360009054906101000a900463ffffffff16905060008190505b600260008263ffffffff16815260200190815260200160002054841415610d7c57600192505050610db4565b60008163ffffffff161415610d9057601e90505b8080600190039150508163ffffffff168163ffffffff161415610d50576000925050505b919050565b60076020528060005260406000206000915054906101000a900460ff1681565b60055481565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018360001c10610e79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5f6c6566742073686f756c6420626520696e7369646520746865206669656c6481525060200191505060405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018260001c10610ef4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806124d26021913960400191505060405180910390fd5b60008360001c905060008573ffffffffffffffffffffffffffffffffffffffff1663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b158015610f5657600080fd5b505afa158015610f6a573d6000803e3d6000fd5b505050506040513d6040811015610f8057600080fd5b81019080805190602001909291908051906020019092919050505080925081935050507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180610fcb57fe5b8460001c830891508573ffffffffffffffffffffffffffffffffffffffff1663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b15801561102b57600080fd5b505afa15801561103f573d6000803e3d6000fd5b505050506040513d604081101561105557600080fd5b81019080805190602001909291908051906020019092919050505080925081935050508160001b925050509392505050565b600360009054906101000a900463ffffffff1681565b60608282905067ffffffffffffffff811180156110b957600080fd5b506040519080825280602002602001820160405280156110e85781602001602082028036833780820191505090505b50905060005b838390508110156111475761111484848381811061110857fe5b90506020020135611329565b1561113a57600182828151811061112757fe5b6020026020010190151590811515815250505b80806001019150506110ee565b5092915050565b600260045414156111c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b60026004819055506007600082815260200190815260200160002060009054906101000a900460ff1615611246576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806124f36021913960400191505060405180910390fd5b600061125182611ca8565b905060016007600084815260200190815260200160002060006101000a81548160ff021916908315150217905550611287611edd565b817fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff1968242604051808363ffffffff1681526020018281526020019250505060405180910390a250600160048190555050565b600060026000600360009054906101000a900463ffffffff1663ffffffff16815260200190815260200160002054905090565b60026020528060005260406000206000915090505481565b601e81565b60006006600083815260200190815260200160002060009054906101000a900460ff169050919050565b600080821415611388577f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60001b9050611a40565b60018214156113bc577f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d60001b9050611a40565b60028214156113f0577f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20060001b9050611a40565b6003821415611424577f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb60001b9050611a40565b6004821415611458577f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c960001b9050611a40565b600582141561148c577f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495960001b9050611a40565b60068214156114c0577f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c60001b9050611a40565b60078214156114f4577f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb460001b9050611a40565b6008821415611528577f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8060001b9050611a40565b600982141561155b577e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00760001b9050611a40565b600a82141561158f577f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3060001b9050611a40565b600b8214156115c3577f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e560001b9050611a40565b600c8214156115f7577f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f60001b9050611a40565b600d82141561162b577f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd60001b9050611a40565b600e82141561165f577f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10860001b9050611a40565b600f821415611693577f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b660001b9050611a40565b60108214156116c7577f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185460001b9050611a40565b60118214156116fb577f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea60001b9050611a40565b601282141561172f577f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d60001b9050611a40565b6013821415611763577f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0560001b9050611a40565b6014821415611797577f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d460001b9050611a40565b60158214156117cb577f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296760001b9050611a40565b60168214156117ff577f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345360001b9050611a40565b6017821415611833577f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4860001b9050611a40565b6018821415611867577f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd160001b9050611a40565b601982141561189b577f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c60001b9050611a40565b601a8214156118cf577f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9960001b9050611a40565b601b821415611903577f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35460001b9050611a40565b601c821415611936577e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d60001b9050611a40565b601d82141561196a577f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42760001b9050611a40565b601e82141561199e577f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb60001b9050611a40565b601f8214156119d2577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc60001b9050611a40565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b919050565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020528060005260406000206000915090505481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360049054906101000a900463ffffffff1681565b803414611b39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061247c6030913960400191505060405180910390fd5b611b8a848360055403600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611f899092919063ffffffff16565b6000821115611be157611be08383600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611f899092919063ffffffff16565b5b6000811115611ca25760008473ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d8060008114611c4a576040519150601f19603f3d011682016040523d82523d6000602084013e611c4f565b606091505b5050905080611ca0578373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015611c9e573d6000803e3d6000fd5b505b505b50505050565b600080600360049054906101000a900463ffffffff16905060008054906101000a900463ffffffff1663ffffffff16600263ffffffff160a63ffffffff168163ffffffff161415611d44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061256e6030913960400191505060405180910390fd5b6000819050600084905060008060005b60008054906101000a900463ffffffff1663ffffffff168163ffffffff161015611e3b57600060028663ffffffff1681611d8a57fe5b0663ffffffff161415611dce57839250611da98163ffffffff16611353565b915083600160008363ffffffff16815260200190815260200160002081905550611dee565b600160008263ffffffff1681526020019081526020016000205492508391505b611e197f00000000000000000000000000000000000000000000000000000000000000008484610ddf565b935060028563ffffffff1681611e2b57fe5b0494508080600101915050611d54565b506000601e63ffffffff166001600360009054906101000a900463ffffffff160163ffffffff1681611e6957fe5b06905080600360006101000a81548163ffffffff021916908363ffffffff16021790555083600260008363ffffffff1681526020019081526020016000208190555060018601600360046101000a81548163ffffffff021916908363ffffffff160217905550859650505050505050919050565b60003414611f36576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806125146030913960400191505060405180910390fd5b611f873330600554600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661202b909392919063ffffffff16565b565b6120268363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120ec565b505050565b6120e6846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120ec565b50505050565b606061214e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166121db9092919063ffffffff16565b90506000815111156121d65780806020019051602081101561216f57600080fd5b81019080805190602001909291905050506121d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612544602a913960400191505060405180910390fd5b5b505050565b60606121ea84846000856121f3565b90509392505050565b60608247101561224e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806124ac6026913960400191505060405180910390fd5b6122578561239c565b6122c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061231957805182526020820191506020810190506020830392506122f6565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461237b576040519150601f19603f3d011682016040523d82523d6000602084013e612380565b606091505b50915091506123908282866123af565b92505050949350505050565b600080823b905060008111915050919050565b606083156123bf57829050612474565b6000835111156123d25782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561243957808201518184015260208101905061241e565b50505050905090810190601f1680156124665780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe496e636f727265637420726566756e6420616d6f756e742072656365697665642062792074686520636f6e7472616374416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5f72696768742073686f756c6420626520696e7369646520746865206669656c6454686520636f6d6d69746d656e7420686173206265656e207375626d69747465644554482076616c756520697320737570706f73656420746f206265203020666f7220455243323020696e7374616e63655361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565644d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e206265206164646564a2646970667358221220248de93afec6e74d34879eda2eca6a4c034fd8c9bbcb7946c3aed78b82de8ce264736f6c63430007000033",
  "immutableReferences": {
    "289": [
      {
        "length": 32,
        "start": 6763
      },
      {
        "length": 32,
        "start": 7667
      }
    ],
    "991": [
      {
        "length": 32,
        "start": 2603
      },
      {
        "length": 32,
        "start": 3267
      }
    ]
  },
  "sourceMap": "962:1105:1:-:0;;;1782:1:3;1749:34;;;;;;;;;;;;;;;;;;;;1813:1;1787:27;;;;;;;;;;;;;;;;;;;;1053:225:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1199:9;1210:7;1219:13;1234:17;1207::5;1226:7;1888:1:3;1878:7;:11;;;1870:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1953:2;1943:7;:12;;;1935:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2005:7;1996:6;;:16;;;;;;;;;;;;;;;;;;2027:7;2018:16;;;;;;;;;;;;2046:8;2041:80;2064:7;2060:11;;:1;:11;;;2041:80;;;2106:8;2112:1;2106:8;;:5;;;:8;;:::i;:::-;2086:14;:17;2101:1;2086:17;;;;;;;;;;;;;:28;;;;2073:3;;;;;;;2041:80;;;;2138:18;2154:1;2144:7;:11;2138:18;;:5;;;:18;;:::i;:::-;2127:5;:8;2133:1;2127:8;;;;;;;;;;;:29;;;;1819:342;;1645:1:13;1760:7;:22;;;;1265:1:5::1;1249:13;:17;1241:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1325:9;1314:20;;;;;;;;;;::::0;::::1;1355:13;1340:12;:28;;;;1066:307:::0;;;;1267:6:1::1;1259:5;;:14;;;;;;;;;;;;;;;;;;1053:225:::0;;;;;962:1105;;4296:3478:3;4343:7;4367:1;4362;:6;4358:3411;;;4385:66;4377:75;;4370:82;;;;4358:3411;4472:1;4467;:6;4463:3306;;;4490:66;4482:75;;4475:82;;;;4463:3306;4577:1;4572;:6;4568:3201;;;4595:66;4587:75;;4580:82;;;;4568:3201;4682:1;4677;:6;4673:3096;;;4700:66;4692:75;;4685:82;;;;4673:3096;4787:1;4782;:6;4778:2991;;;4805:66;4797:75;;4790:82;;;;4778:2991;4892:1;4887;:6;4883:2886;;;4910:66;4902:75;;4895:82;;;;4883:2886;4997:1;4992;:6;4988:2781;;;5015:66;5007:75;;5000:82;;;;4988:2781;5102:1;5097;:6;5093:2676;;;5120:66;5112:75;;5105:82;;;;5093:2676;5207:1;5202;:6;5198:2571;;;5225:66;5217:75;;5210:82;;;;5198:2571;5312:1;5307;:6;5303:2466;;;5330:66;5322:75;;5315:82;;;;5303:2466;5417:2;5412:1;:7;5408:2361;;;5436:66;5428:75;;5421:82;;;;5408:2361;5523:2;5518:1;:7;5514:2255;;;5542:66;5534:75;;5527:82;;;;5514:2255;5629:2;5624:1;:7;5620:2149;;;5648:66;5640:75;;5633:82;;;;5620:2149;5735:2;5730:1;:7;5726:2043;;;5754:66;5746:75;;5739:82;;;;5726:2043;5841:2;5836:1;:7;5832:1937;;;5860:66;5852:75;;5845:82;;;;5832:1937;5947:2;5942:1;:7;5938:1831;;;5966:66;5958:75;;5951:82;;;;5938:1831;6053:2;6048:1;:7;6044:1725;;;6072:66;6064:75;;6057:82;;;;6044:1725;6159:2;6154:1;:7;6150:1619;;;6178:66;6170:75;;6163:82;;;;6150:1619;6265:2;6260:1;:7;6256:1513;;;6284:66;6276:75;;6269:82;;;;6256:1513;6371:2;6366:1;:7;6362:1407;;;6390:66;6382:75;;6375:82;;;;6362:1407;6477:2;6472:1;:7;6468:1301;;;6496:66;6488:75;;6481:82;;;;6468:1301;6583:2;6578:1;:7;6574:1195;;;6602:66;6594:75;;6587:82;;;;6574:1195;6689:2;6684:1;:7;6680:1089;;;6708:66;6700:75;;6693:82;;;;6680:1089;6795:2;6790:1;:7;6786:983;;;6814:66;6806:75;;6799:82;;;;6786:983;6901:2;6896:1;:7;6892:877;;;6920:66;6912:75;;6905:82;;;;6892:877;7007:2;7002:1;:7;6998:771;;;7026:66;7018:75;;7011:82;;;;6998:771;7113:2;7108:1;:7;7104:665;;;7132:66;7124:75;;7117:82;;;;7104:665;7219:2;7214:1;:7;7210:559;;;7238:66;7230:75;;7223:82;;;;7210:559;7325:2;7320:1;:7;7316:453;;;7344:66;7336:75;;7329:82;;;;7316:453;7431:2;7426:1;:7;7422:347;;;7450:66;7442:75;;7435:82;;;;7422:347;7537:2;7532:1;:7;7528:241;;;7556:66;7548:75;;7541:82;;;;7528:241;7643:2;7638:1;:7;7634:135;;;7662:66;7654:75;;7647:82;;;;7634:135;7740:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4296:3478;;;;:::o;962:1105:1:-;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "962:1105:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;419:47:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2449:855;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;348:35;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;978:114:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1289:20;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3677:394;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;561:43:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;387:27;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2233:480:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1749:34;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3743:298:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:324;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4117:94:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1656:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1700:45;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3565:117:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4296:3478:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1096:114;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1253:31;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1603:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1029:19:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1787:27:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;419:47:5;;;;;;;;;;;;;;;;;;;;;;:::o;2449:855::-;1688:1:13;2277:7;;:19;;2269:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;;;;2698:12:5::1;;2690:4;:20;;2682:59;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2756:15;:31;2772:14;2756:31;;;;;;;;;;;;;;;;;;;;;2755:32;2747:76;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2837:18;2849:5;2837:11;:18::i;:::-;2829:59;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2942:8;:20;;;2972:6;;2942:150;;;;;;;;2997:5;2989:14;;2942:150;;;;3013:14;3005:23;;2942:150;;;;3038:10;3030:19;;2942:150;;;;3059:8;3051:17;;2942:150;;;;3070:4;2942:150;;;;3076:7;2942:150;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;2927:203;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3171:4;3137:15;:31;3153:14;3137:31;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;3181:53;3198:10;3210:8;3220:4;3226:7;3181:16;:53::i;:::-;3284:8;3245:54;;;3256:10;3268:14;3294:4;3245:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1645:1:13::0;2580:7;:22;;;;2449:855:5;;;;;;;;:::o;348:35::-;;;:::o;978:114:3:-;1015:77;978:114;:::o;1289:20::-;;;;;;;;;;;;:::o;3677:394::-;3734:4;3759:1;3750:10;;:5;:10;3746:43;;;3777:5;3770:12;;;;3746:43;3794:24;3821:16;;;;;;;;;;;3794:43;;3843:8;3854:17;3843:28;;3877:172;3901:5;:8;3907:1;3901:8;;;;;;;;;;;;;;3892:5;:17;3888:53;;;3928:4;3921:11;;;;;;3888:53;3957:1;3952;:6;;;3948:52;;;1743:2;3970:21;;3948:52;4007:3;;;;;;;;4030:17;4025:22;;:1;:22;;;;3877:172;;4061:5;4054:12;;;;3677:394;;;;:::o;561:43:5:-;;;;;;;;;;;;;;;;;;;;;;:::o;387:27::-;;;;:::o;2233:480:3:-;2341:7;1015:77;2372:5;2364:14;;:27;2356:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1015:77;2450:6;2442:15;;:28;2434:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2514:9;2534:5;2526:14;;2514:26;;2546:9;2574:7;:18;;;2593:1;2596;2574:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:33;;;;;;;;1015:77;2608:38;;;;;2626:6;2618:15;;2615:1;2608:38;2604:42;;2661:7;:18;;;2680:1;2683;2661:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2652:33;;;;;;;;2706:1;2698:10;;2691:17;;;;2233:480;;;;;:::o;1749:34::-;;;;;;;;;;;;;:::o;3743:298:5:-;3825:19;3871:16;;:23;;3860:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3852:43;;3906:9;3901:136;3925:16;;:23;;3921:1;:27;3901:136;;;3967:28;3975:16;;3992:1;3975:19;;;;;;;;;;;;;3967:7;:28::i;:::-;3963:68;;;4018:4;4007:5;4013:1;4007:8;;;;;;;;;;;;;:15;;;;;;;;;;;3963:68;3950:3;;;;;;;3901:136;;;;3743:298;;;;:::o;1621:324::-;1688:1:13;2277:7;;:19;;2269:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;;;;1704:11:5::1;:24;1716:11;1704:24;;;;;;;;;;;;;;;;;;;;;1703:25;1695:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1773:20;1796;1804:11;1796:7;:20::i;:::-;1773:43;;1849:4;1822:11;:24;1834:11;1822:24;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1859:17;:15;:17::i;:::-;1896:11;1888:52;1909:13;1924:15;1888:52;;;;;;;;;;;;;;;;;;;;;;;;;;2436:1:13;1645::::0;2580:7;:22;;;;1621:324:5;:::o;4117:94:3:-;4161:7;4183:5;:23;4189:16;;;;;;;;;;;4183:23;;;;;;;;;;;;;;4176:30;;4117:94;:::o;1656:40::-;;;;;;;;;;;;;;;;;:::o;1700:45::-;1743:2;1700:45;:::o;3565:117:5:-;3627:4;3646:15;:31;3662:14;3646:31;;;;;;;;;;;;;;;;;;;;;3639:38;;3565:117;;;:::o;4296:3478:3:-;4343:7;4367:1;4362;:6;4358:3411;;;4385:66;4377:75;;4370:82;;;;4358:3411;4472:1;4467;:6;4463:3306;;;4490:66;4482:75;;4475:82;;;;4463:3306;4577:1;4572;:6;4568:3201;;;4595:66;4587:75;;4580:82;;;;4568:3201;4682:1;4677;:6;4673:3096;;;4700:66;4692:75;;4685:82;;;;4673:3096;4787:1;4782;:6;4778:2991;;;4805:66;4797:75;;4790:82;;;;4778:2991;4892:1;4887;:6;4883:2886;;;4910:66;4902:75;;4895:82;;;;4883:2886;4997:1;4992;:6;4988:2781;;;5015:66;5007:75;;5000:82;;;;4988:2781;5102:1;5097;:6;5093:2676;;;5120:66;5112:75;;5105:82;;;;5093:2676;5207:1;5202;:6;5198:2571;;;5225:66;5217:75;;5210:82;;;;5198:2571;5312:1;5307;:6;5303:2466;;;5330:66;5322:75;;5315:82;;;;5303:2466;5417:2;5412:1;:7;5408:2361;;;5436:66;5428:75;;5421:82;;;;5408:2361;5523:2;5518:1;:7;5514:2255;;;5542:66;5534:75;;5527:82;;;;5514:2255;5629:2;5624:1;:7;5620:2149;;;5648:66;5640:75;;5633:82;;;;5620:2149;5735:2;5730:1;:7;5726:2043;;;5754:66;5746:75;;5739:82;;;;5726:2043;5841:2;5836:1;:7;5832:1937;;;5860:66;5852:75;;5845:82;;;;5832:1937;5947:2;5942:1;:7;5938:1831;;;5966:66;5958:75;;5951:82;;;;5938:1831;6053:2;6048:1;:7;6044:1725;;;6072:66;6064:75;;6057:82;;;;6044:1725;6159:2;6154:1;:7;6150:1619;;;6178:66;6170:75;;6163:82;;;;6150:1619;6265:2;6260:1;:7;6256:1513;;;6284:66;6276:75;;6269:82;;;;6256:1513;6371:2;6366:1;:7;6362:1407;;;6390:66;6382:75;;6375:82;;;;6362:1407;6477:2;6472:1;:7;6468:1301;;;6496:66;6488:75;;6481:82;;;;6468:1301;6583:2;6578:1;:7;6574:1195;;;6602:66;6594:75;;6587:82;;;;6574:1195;6689:2;6684:1;:7;6680:1089;;;6708:66;6700:75;;6693:82;;;;6680:1089;6795:2;6790:1;:7;6786:983;;;6814:66;6806:75;;6799:82;;;;6786:983;6901:2;6896:1;:7;6892:877;;;6920:66;6912:75;;6905:82;;;;6892:877;7007:2;7002:1;:7;6998:771;;;7026:66;7018:75;;7011:82;;;;6998:771;7113:2;7108:1;:7;7104:665;;;7132:66;7124:75;;7117:82;;;;7104:665;7219:2;7214:1;:7;7210:559;;;7238:66;7230:75;;7223:82;;;;7210:559;7325:2;7320:1;:7;7316:453;;;7344:66;7336:75;;7329:82;;;;7316:453;7431:2;7426:1;:7;7422:347;;;7450:66;7442:75;;7435:82;;;;7422:347;7537:2;7532:1;:7;7528:241;;;7556:66;7548:75;;7541:82;;;;7528:241;7643:2;7638:1;:7;7634:135;;;7662:66;7654:75;;7647:82;;;;7634:135;7740:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4296:3478;;;;:::o;1096:114::-;1133:77;1096:114;:::o;1253:31::-;;;:::o;1603:49::-;;;;;;;;;;;;;;;;;:::o;1029:19:1:-;;;;;;;;;;;;;:::o;1787:27:3:-;;;;;;;;;;;;;:::o;1486:579:1:-;1662:7;1649:9;:20;1641:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1729:51;1748:10;1775:4;1760:12;;:19;1729:5;;;;;;;;;;;:18;;;;:51;;;;;:::i;:::-;1797:1;1790:4;:8;1786:63;;;1808:34;1827:8;1837:4;1808:5;;;;;;;;;;;:18;;;;:34;;;;;:::i;:::-;1786:63;1869:1;1859:7;:11;1855:206;;;1881:12;1899:10;:15;;1923:7;1899:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1880:56;;;1949:7;1944:111;;2020:8;:17;;:26;2038:7;2020:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1944:111;1855:206;;1486:579;;;;:::o;2717:888:3:-;2767:12;2787:17;2807:9;;;;;;;;;;;2787:29;;2855:6;;;;;;;;;;2844:17;;2851:1;2844:17;;;2830:31;;:10;:31;;;;2822:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2920:19;2942:10;2920:32;;2958:24;2985:5;2958:32;;2996:12;3014:13;3039:8;3034:360;3057:6;;;;;;;;;;3053:10;;:1;:10;;;3034:360;;;3102:1;3097;3082:12;:16;;;;;;;;:21;;;3078:224;;;3122:16;3115:23;;3156:8;3162:1;3156:8;;:5;:8::i;:::-;3148:16;;3194;3174:14;:17;3189:1;3174:17;;;;;;;;;;;;;:36;;;;3078:224;;;3242:14;:17;3257:1;3242:17;;;;;;;;;;;;;;3235:24;;3277:16;3269:24;;3078:224;3328:34;3342:6;3350:4;3356:5;3328:13;:34::i;:::-;3309:53;;3386:1;3370:17;;;;;;;;;;;3065:3;;;;;;;3034:360;;;;3400:19;1743:2;3422:42;;3442:1;3423:16;;;;;;;;;;;:20;3422:42;;;;;;;;3400:64;;3489:12;3470:16;;:31;;;;;;;;;;;;;;;;;;3529:16;3507:5;:19;3513:12;3507:19;;;;;;;;;;;;;:38;;;;3576:1;3563:10;:14;3551:9;;:26;;;;;;;;;;;;;;;;;;3590:10;3583:17;;;;;;;;2717:888;;;:::o;1282:200:1:-;1354:1;1341:9;:14;1333:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1414:63;1437:10;1457:4;1464:12;;1414:5;;;;;;;;;;;:22;;;;:63;;;;;;:::i;:::-;1282:200::o;704:175:10:-;786:86;806:5;836:23;;;861:2;865:5;813:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:19;:86::i;:::-;704:175;;;:::o;885:203::-;985:96;1005:5;1035:27;;;1064:4;1070:2;1074:5;1012:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;985:19;:96::i;:::-;885:203;;;;:::o;2967:751::-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;3412:27;;;;:69;;;;;:::i;:::-;3386:95;;3515:1;3495:10;:17;:21;3491:221;;;3635:10;3624:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3616:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3491:221;2967:751;;;:::o;3581:193:11:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;:11;;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;;;;4608:523;;;;;;:::o;726:413::-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;7264:10;7257:17;;;;7230:580;7395:1;7375:10;:17;:21;7371:429;;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7091:725;;;;;;:::o",
  "source": "// https://tornado.cash\n/*\n * d888888P                                           dP              a88888b.                   dP\n *    88                                              88             d8'   `88                   88\n *    88    .d8888b. 88d888b. 88d888b. .d8888b. .d888b88 .d8888b.    88        .d8888b. .d8888b. 88d888b.\n *    88    88'  `88 88'  `88 88'  `88 88'  `88 88'  `88 88'  `88    88        88'  `88 Y8ooooo. 88'  `88\n *    88    88.  .88 88       88    88 88.  .88 88.  .88 88.  .88 dP Y8.   .88 88.  .88       88 88    88\n *    dP    `88888P' dP       dP    dP `88888P8 `88888P8 `88888P' 88  Y88888P' `88888P8 `88888P' dP    dP\n * ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n */\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport \"./Tornado.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\n\ncontract ERC20Tornado is Tornado {\n  using SafeERC20 for IERC20;\n  IERC20 public token;\n\n  constructor(\n    IVerifier _verifier,\n    IHasher _hasher,\n    uint256 _denomination,\n    uint32 _merkleTreeHeight,\n    IERC20 _token\n  ) Tornado(_verifier, _hasher, _denomination, _merkleTreeHeight) {\n    token = _token;\n  }\n\n  function _processDeposit() internal override {\n    require(msg.value == 0, \"ETH value is supposed to be 0 for ERC20 instance\");\n    token.safeTransferFrom(msg.sender, address(this), denomination);\n  }\n\n  function _processWithdraw(\n    address payable _recipient,\n    address payable _relayer,\n    uint256 _fee,\n    uint256 _refund\n  ) internal override {\n    require(msg.value == _refund, \"Incorrect refund amount received by the contract\");\n\n    token.safeTransfer(_recipient, denomination - _fee);\n    if (_fee > 0) {\n      token.safeTransfer(_relayer, _fee);\n    }\n\n    if (_refund > 0) {\n      (bool success, ) = _recipient.call{ value: _refund }(\"\");\n      if (!success) {\n        // let's return _refund back to the relayer\n        _relayer.transfer(_refund);\n      }\n    }\n  }\n}",
  "sourcePath": "/Users/gautam/Documents/semilla-contracts/contracts/ERC20Tornado.sol",
  "ast": {
    "absolutePath": "/Users/gautam/Documents/semilla-contracts/contracts/ERC20Tornado.sol",
    "exportedSymbols": {
      "ERC20Tornado": [
        148
      ]
    },
    "id": 149,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "795:23:1"
      },
      {
        "absolutePath": "/Users/gautam/Documents/semilla-contracts/contracts/Tornado.sol",
        "file": "./Tornado.sol",
        "id": 23,
        "nodeType": "ImportDirective",
        "scope": 149,
        "sourceUnit": 1257,
        "src": "820:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 24,
        "nodeType": "ImportDirective",
        "scope": 149,
        "sourceUnit": 2970,
        "src": "844:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 25,
        "nodeType": "ImportDirective",
        "scope": 149,
        "sourceUnit": 3183,
        "src": "901:59:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 26,
              "name": "Tornado",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1256,
              "src": "987:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Tornado_$1256",
                "typeString": "contract Tornado"
              }
            },
            "id": 27,
            "nodeType": "InheritanceSpecifier",
            "src": "987:7:1"
          }
        ],
        "contractDependencies": [
          936,
          1256,
          3541
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 148,
        "linearizedBaseContracts": [
          148,
          1256,
          3541,
          936
        ],
        "name": "ERC20Tornado",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 30,
            "libraryName": {
              "contractScope": null,
              "id": 28,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3182,
              "src": "1005:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$3182",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "999:27:1",
            "typeName": {
              "contractScope": null,
              "id": 29,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2969,
              "src": "1019:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2969",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 32,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 148,
            "src": "1029:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2969",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 31,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2969,
              "src": "1029:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2969",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "1253:25:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1259:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2969",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 52,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1267:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2969",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1259:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2969",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "1259:14:1"
                }
              ]
            },
            "documentation": null,
            "id": 56,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 45,
                    "name": "_verifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34,
                    "src": "1199:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$985",
                      "typeString": "contract IVerifier"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 46,
                    "name": "_hasher",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36,
                    "src": "1210:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$281",
                      "typeString": "contract IHasher"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 47,
                    "name": "_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38,
                    "src": "1219:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 48,
                    "name": "_merkleTreeHeight",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40,
                    "src": "1234:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 49,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 44,
                  "name": "Tornado",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1256,
                  "src": "1191:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Tornado_$1256_$",
                    "typeString": "type(contract Tornado)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1191:61:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "_verifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "1070:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVerifier_$985",
                    "typeString": "contract IVerifier"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 33,
                    "name": "IVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 985,
                    "src": "1070:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$985",
                      "typeString": "contract IVerifier"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_hasher",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "1095:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHasher_$281",
                    "typeString": "contract IHasher"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 35,
                    "name": "IHasher",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 281,
                    "src": "1095:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$281",
                      "typeString": "contract IHasher"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "_denomination",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "1116:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "_merkleTreeHeight",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "1143:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "1173:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2969",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 41,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2969,
                    "src": "1173:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2969",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1064:126:1"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1253:0:1"
            },
            "scope": 148,
            "src": "1053:225:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1094
            ],
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "1327:155:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1341:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1341:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1354:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1341:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4554482076616c756520697320737570706f73656420746f206265203020666f7220455243323020696e7374616e6365",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1357:50:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b14b0818f1fdc710b92ba7e1ce725992b43e47a5b220b1b890f352eeac2e1d5e",
                          "typeString": "literal_string \"ETH value is supposed to be 0 for ERC20 instance\""
                        },
                        "value": "ETH value is supposed to be 0 for ERC20 instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b14b0818f1fdc710b92ba7e1ce725992b43e47a5b220b1b890f352eeac2e1d5e",
                          "typeString": "literal_string \"ETH value is supposed to be 0 for ERC20 instance\""
                        }
                      ],
                      "id": 60,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1333:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1333:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1333:75:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 71,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1437:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1437:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 75,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1457:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Tornado_$148",
                              "typeString": "contract ERC20Tornado"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Tornado_$148",
                              "typeString": "contract ERC20Tornado"
                            }
                          ],
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1449:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1449:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1449:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "denomination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 993,
                        "src": "1464:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 68,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1414:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2969",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3028,
                      "src": "1414:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2969_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2969_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1414:63:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1414:63:1"
                }
              ]
            },
            "documentation": null,
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processDeposit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 58,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1318:8:1"
            },
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1306:2:1"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:0:1"
            },
            "scope": 148,
            "src": "1282:200:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1196
            ],
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "1635:430:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 94,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1649:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1649:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 96,
                          "name": "_refund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89,
                          "src": "1662:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1649:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e636f727265637420726566756e6420616d6f756e742072656365697665642062792074686520636f6e7472616374",
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1671:50:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3189ced290ffd29dc422911cd3b29574f21c524c91f4b41e6abb0646c581cbff",
                          "typeString": "literal_string \"Incorrect refund amount received by the contract\""
                        },
                        "value": "Incorrect refund amount received by the contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3189ced290ffd29dc422911cd3b29574f21c524c91f4b41e6abb0646c581cbff",
                          "typeString": "literal_string \"Incorrect refund amount received by the contract\""
                        }
                      ],
                      "id": 93,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1641:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1641:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1641:81:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1748:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 105,
                          "name": "denomination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 993,
                          "src": "1760:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 106,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "1775:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1760:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1729:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2969",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3003,
                      "src": "1729:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2969_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2969_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:51:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 110,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "1790:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1797:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1790:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 121,
                  "nodeType": "IfStatement",
                  "src": "1786:63:1",
                  "trueBody": {
                    "id": 120,
                    "nodeType": "Block",
                    "src": "1800:49:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 116,
                              "name": "_relayer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "1827:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 117,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87,
                              "src": "1837:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 113,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "1808:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2969",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3003,
                            "src": "1808:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2969_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2969_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1808:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 119,
                        "nodeType": "ExpressionStatement",
                        "src": "1808:34:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "_refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "1859:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1869:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1859:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 145,
                  "nodeType": "IfStatement",
                  "src": "1855:206:1",
                  "trueBody": {
                    "id": 144,
                    "nodeType": "Block",
                    "src": "1872:189:1",
                    "statements": [
                      {
                        "assignments": [
                          126,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 126,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 144,
                            "src": "1881:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 125,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1881:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 133,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1933:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 127,
                                "name": "_recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83,
                                "src": "1899:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1899:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "argumentTypes": null,
                                "id": 129,
                                "name": "_refund",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89,
                                "src": "1923:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1899:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1899:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1880:56:1"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1948:8:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 134,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1949:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 143,
                        "nodeType": "IfStatement",
                        "src": "1944:111:1",
                        "trueBody": {
                          "id": 142,
                          "nodeType": "Block",
                          "src": "1958:97:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 139,
                                    "name": "_refund",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89,
                                    "src": "2038:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 136,
                                    "name": "_relayer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 85,
                                    "src": "2020:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 138,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "2020:17:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2020:26:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 141,
                              "nodeType": "ExpressionStatement",
                              "src": "2020:26:1"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 91,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1626:8:1"
            },
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "1517:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1517:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "1549:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1549:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "1579:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "_refund",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "1597:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1511:105:1"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1635:0:1"
            },
            "scope": 148,
            "src": "1486:579:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 149,
        "src": "962:1105:1"
      }
    ],
    "src": "795:1272:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/gautam/Documents/semilla-contracts/contracts/ERC20Tornado.sol",
    "exportedSymbols": {
      "ERC20Tornado": [
        148
      ]
    },
    "id": 149,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "795:23:1"
      },
      {
        "absolutePath": "/Users/gautam/Documents/semilla-contracts/contracts/Tornado.sol",
        "file": "./Tornado.sol",
        "id": 23,
        "nodeType": "ImportDirective",
        "scope": 149,
        "sourceUnit": 1257,
        "src": "820:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 24,
        "nodeType": "ImportDirective",
        "scope": 149,
        "sourceUnit": 2970,
        "src": "844:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 25,
        "nodeType": "ImportDirective",
        "scope": 149,
        "sourceUnit": 3183,
        "src": "901:59:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 26,
              "name": "Tornado",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1256,
              "src": "987:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Tornado_$1256",
                "typeString": "contract Tornado"
              }
            },
            "id": 27,
            "nodeType": "InheritanceSpecifier",
            "src": "987:7:1"
          }
        ],
        "contractDependencies": [
          936,
          1256,
          3541
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 148,
        "linearizedBaseContracts": [
          148,
          1256,
          3541,
          936
        ],
        "name": "ERC20Tornado",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 30,
            "libraryName": {
              "contractScope": null,
              "id": 28,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3182,
              "src": "1005:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$3182",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "999:27:1",
            "typeName": {
              "contractScope": null,
              "id": 29,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2969,
              "src": "1019:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2969",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 32,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 148,
            "src": "1029:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2969",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 31,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2969,
              "src": "1029:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2969",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "1253:25:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1259:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2969",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 52,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1267:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2969",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1259:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2969",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "1259:14:1"
                }
              ]
            },
            "documentation": null,
            "id": 56,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 45,
                    "name": "_verifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34,
                    "src": "1199:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$985",
                      "typeString": "contract IVerifier"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 46,
                    "name": "_hasher",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36,
                    "src": "1210:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$281",
                      "typeString": "contract IHasher"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 47,
                    "name": "_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38,
                    "src": "1219:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 48,
                    "name": "_merkleTreeHeight",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40,
                    "src": "1234:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 49,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 44,
                  "name": "Tornado",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1256,
                  "src": "1191:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Tornado_$1256_$",
                    "typeString": "type(contract Tornado)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1191:61:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "_verifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "1070:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVerifier_$985",
                    "typeString": "contract IVerifier"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 33,
                    "name": "IVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 985,
                    "src": "1070:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$985",
                      "typeString": "contract IVerifier"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_hasher",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "1095:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHasher_$281",
                    "typeString": "contract IHasher"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 35,
                    "name": "IHasher",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 281,
                    "src": "1095:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$281",
                      "typeString": "contract IHasher"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "_denomination",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "1116:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "_merkleTreeHeight",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "1143:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "1173:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2969",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 41,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2969,
                    "src": "1173:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2969",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1064:126:1"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1253:0:1"
            },
            "scope": 148,
            "src": "1053:225:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1094
            ],
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "1327:155:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1341:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1341:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1354:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1341:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4554482076616c756520697320737570706f73656420746f206265203020666f7220455243323020696e7374616e6365",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1357:50:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b14b0818f1fdc710b92ba7e1ce725992b43e47a5b220b1b890f352eeac2e1d5e",
                          "typeString": "literal_string \"ETH value is supposed to be 0 for ERC20 instance\""
                        },
                        "value": "ETH value is supposed to be 0 for ERC20 instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b14b0818f1fdc710b92ba7e1ce725992b43e47a5b220b1b890f352eeac2e1d5e",
                          "typeString": "literal_string \"ETH value is supposed to be 0 for ERC20 instance\""
                        }
                      ],
                      "id": 60,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1333:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1333:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1333:75:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 71,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1437:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1437:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 75,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1457:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Tornado_$148",
                              "typeString": "contract ERC20Tornado"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Tornado_$148",
                              "typeString": "contract ERC20Tornado"
                            }
                          ],
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1449:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1449:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1449:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "denomination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 993,
                        "src": "1464:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 68,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1414:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2969",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3028,
                      "src": "1414:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2969_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2969_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1414:63:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1414:63:1"
                }
              ]
            },
            "documentation": null,
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processDeposit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 58,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1318:8:1"
            },
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1306:2:1"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:0:1"
            },
            "scope": 148,
            "src": "1282:200:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1196
            ],
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "1635:430:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 94,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1649:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1649:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 96,
                          "name": "_refund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89,
                          "src": "1662:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1649:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e636f727265637420726566756e6420616d6f756e742072656365697665642062792074686520636f6e7472616374",
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1671:50:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3189ced290ffd29dc422911cd3b29574f21c524c91f4b41e6abb0646c581cbff",
                          "typeString": "literal_string \"Incorrect refund amount received by the contract\""
                        },
                        "value": "Incorrect refund amount received by the contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3189ced290ffd29dc422911cd3b29574f21c524c91f4b41e6abb0646c581cbff",
                          "typeString": "literal_string \"Incorrect refund amount received by the contract\""
                        }
                      ],
                      "id": 93,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1641:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1641:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1641:81:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1748:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 105,
                          "name": "denomination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 993,
                          "src": "1760:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 106,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "1775:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1760:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1729:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2969",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3003,
                      "src": "1729:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2969_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2969_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:51:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 110,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "1790:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1797:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1790:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 121,
                  "nodeType": "IfStatement",
                  "src": "1786:63:1",
                  "trueBody": {
                    "id": 120,
                    "nodeType": "Block",
                    "src": "1800:49:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 116,
                              "name": "_relayer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "1827:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 117,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87,
                              "src": "1837:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 113,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "1808:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2969",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3003,
                            "src": "1808:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2969_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2969_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1808:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 119,
                        "nodeType": "ExpressionStatement",
                        "src": "1808:34:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "_refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "1859:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1869:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1859:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 145,
                  "nodeType": "IfStatement",
                  "src": "1855:206:1",
                  "trueBody": {
                    "id": 144,
                    "nodeType": "Block",
                    "src": "1872:189:1",
                    "statements": [
                      {
                        "assignments": [
                          126,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 126,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 144,
                            "src": "1881:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 125,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1881:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 133,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1933:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 127,
                                "name": "_recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83,
                                "src": "1899:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1899:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "argumentTypes": null,
                                "id": 129,
                                "name": "_refund",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89,
                                "src": "1923:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1899:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1899:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1880:56:1"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1948:8:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 134,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1949:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 143,
                        "nodeType": "IfStatement",
                        "src": "1944:111:1",
                        "trueBody": {
                          "id": 142,
                          "nodeType": "Block",
                          "src": "1958:97:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 139,
                                    "name": "_refund",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89,
                                    "src": "2038:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 136,
                                    "name": "_relayer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 85,
                                    "src": "2020:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 138,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "2020:17:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2020:26:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 141,
                              "nodeType": "ExpressionStatement",
                              "src": "2020:26:1"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 91,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1626:8:1"
            },
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "1517:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1517:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "1549:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1549:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "1579:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "_refund",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "1597:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1511:105:1"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1635:0:1"
            },
            "scope": 148,
            "src": "1486:579:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 149,
        "src": "962:1105:1"
      }
    ],
    "src": "795:1272:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.0+commit.9e61f92b.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2022-01-19T11:30:15.949Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(bytes32)": {
        "details": "Deposit funds into the contract. The caller must send (for ETH) or approve (for ERC20) value equal to or `denomination` of this instance.",
        "params": {
          "_commitment": "the note commitment, which is PedersenHash(nullifier + secret)"
        }
      },
      "getLastRoot()": {
        "details": "Returns the last root"
      },
      "hashLeftRight(address,bytes32,bytes32)": {
        "details": "Hash 2 tree leaves, returns MiMC(_left, _right)"
      },
      "isKnownRoot(bytes32)": {
        "details": "Whether the root is present in the root history"
      },
      "isSpent(bytes32)": {
        "details": "whether a note is already spent "
      },
      "isSpentArray(bytes32[])": {
        "details": "whether an array of notes is already spent "
      },
      "withdraw(bytes,bytes32,bytes32,address,address,uint256,uint256)": {
        "details": "Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)"
      },
      "zeros(uint256)": {
        "details": "provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}