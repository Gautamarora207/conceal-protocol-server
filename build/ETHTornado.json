{
  "contractName": "ETHTornado",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IVerifier",
          "name": "_verifier",
          "type": "address"
        },
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_denomination",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_merkleTreeHeight",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "commitment",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "leafIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "nullifierHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROOT_HISTORY_SIZE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "denomination",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_commitment",
          "type": "bytes32"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasher",
      "outputs": [
        {
          "internalType": "contract IHasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        }
      ],
      "name": "isSpent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_nullifierHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "isSpentArray",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "spent",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nullifierHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "contract IVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_refund",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"_verifier\",\"type\":\"address\"},{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_denomination\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_merkleTreeHeight\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"leafIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"nullifierHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_HISTORY_SIZE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRootIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"denomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_commitment\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasher\",\"outputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"isKnownRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"}],\"name\":\"isSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_nullifierHashes\",\"type\":\"bytes32[]\"}],\"name\":\"isSpentArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"spent\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nullifierHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refund\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(bytes32)\":{\"details\":\"Deposit funds into the contract. The caller must send (for ETH) or approve (for ERC20) value equal to or `denomination` of this instance.\",\"params\":{\"_commitment\":\"the note commitment, which is PedersenHash(nullifier + secret)\"}},\"getLastRoot()\":{\"details\":\"Returns the last root\"},\"hashLeftRight(address,bytes32,bytes32)\":{\"details\":\"Hash 2 tree leaves, returns MiMC(_left, _right)\"},\"isKnownRoot(bytes32)\":{\"details\":\"Whether the root is present in the root history\"},\"isSpent(bytes32)\":{\"details\":\"whether a note is already spent \"},\"isSpentArray(bytes32[])\":{\"details\":\"whether an array of notes is already spent \"},\"withdraw(bytes,bytes32,bytes32,address,address,uint256,uint256)\":{\"details\":\"Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)\"},\"zeros(uint256)\":{\"details\":\"provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/gautam/Documents/semilla-contracts/contracts/ETHTornado.sol\":\"ETHTornado\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/gautam/Documents/semilla-contracts/contracts/ETHTornado.sol\":{\"keccak256\":\"0x3b700175293d31ae6ea413ee6ca4c68059f52e325dac94816d59d2b823bbe70f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d4b2aefd678f553f0045f24c5b1b484aa728145a225039a68224cf2621d5633\",\"dweb:/ipfs/QmVPyHUUEdipoKmaqbeUjh1hh2py4bH4N7MfggNwSZSgdD\"]},\"/Users/gautam/Documents/semilla-contracts/contracts/MerkleTreeWithHistory.sol\":{\"keccak256\":\"0x13ab1ee963f427b843baf6d0c1ef04db7c4dbea2a27b59f584e4433235b59a1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8c5ca76ea199d5228c739db25600b51fc540ea63089c9bb9aa65a85088f55df\",\"dweb:/ipfs/QmNq3znvEBj7arHLXfysiQRiLCRCaaHcg6c881PysFvvCu\"]},\"/Users/gautam/Documents/semilla-contracts/contracts/Tornado.sol\":{\"keccak256\":\"0x4f8c052a7f9d41a7022f4f559f4dff4d2200d3f90e4fe6a8d8a24e88cce1c9a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d97d188f672d2b3531c6227d0089e54e535d5772a7fcd83ab79b066af8532e6\",\"dweb:/ipfs/QmUiggeED8vv5QXJ4cTB3oC84tawRAYA3eYtx9qRMwcE6n\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182\",\"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK\"]}},\"version\":1}",
  "bytecode": "0x60c06040526000600360006101000a81548163ffffffff021916908363ffffffff1602179055506000600360046101000a81548163ffffffff021916908363ffffffff1602179055503480156200005557600080fd5b5060405162002ba638038062002ba6833981810160405260808110156200007b57600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919050505083838383808360008263ffffffff161162000111576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018062002b836023913960400191505060405180910390fd5b60208263ffffffff16106200018e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5f6c6576656c732073686f756c64206265206c657373207468616e203332000081525060200191505060405180910390fd5b816000806101000a81548163ffffffff021916908363ffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060005b8263ffffffff168163ffffffff1610156200023f57620002148163ffffffff166200032260201b60201c565b600160008363ffffffff168152602001908152602001600020819055508080600101915050620001e8565b506200025a6001830363ffffffff166200032260201b60201c565b60026000808152602001908152602001600020819055505050600160048190555060008211620002d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018062002b5e6025913960400191505060405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505081600581905550505050505050505062000a54565b60008082141562000359577f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60001b905062000a4f565b60018214156200038f577f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d60001b905062000a4f565b6002821415620003c5577f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20060001b905062000a4f565b6003821415620003fb577f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb60001b905062000a4f565b600482141562000431577f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c960001b905062000a4f565b600582141562000467577f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495960001b905062000a4f565b60068214156200049d577f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c60001b905062000a4f565b6007821415620004d3577f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb460001b905062000a4f565b600882141562000509577f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8060001b905062000a4f565b60098214156200053e577e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00760001b905062000a4f565b600a82141562000574577f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3060001b905062000a4f565b600b821415620005aa577f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e560001b905062000a4f565b600c821415620005e0577f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f60001b905062000a4f565b600d82141562000616577f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd60001b905062000a4f565b600e8214156200064c577f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10860001b905062000a4f565b600f82141562000682577f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b660001b905062000a4f565b6010821415620006b8577f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185460001b905062000a4f565b6011821415620006ee577f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea60001b905062000a4f565b601282141562000724577f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d60001b905062000a4f565b60138214156200075a577f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0560001b905062000a4f565b601482141562000790577f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d460001b905062000a4f565b6015821415620007c6577f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296760001b905062000a4f565b6016821415620007fc577f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345360001b905062000a4f565b601782141562000832577f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4860001b905062000a4f565b601882141562000868577f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd160001b905062000a4f565b60198214156200089e577f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c60001b905062000a4f565b601a821415620008d4577f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9960001b905062000a4f565b601b8214156200090a577f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35460001b905062000a4f565b601c8214156200093f577e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d60001b905062000a4f565b601d82141562000975577f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42760001b905062000a4f565b601e821415620009ab577f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb60001b905062000a4f565b601f821415620009e1577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc60001b905062000a4f565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b919050565b60805160601c60a05160601c6120d662000a88600039806109df5280610c77525080611a1f5280611dff52506120d66000f3fe60806040526004361061012a5760003560e01c80639fa12d0b116100ab578063e5285dcc1161006f578063e5285dcc14610629578063e82955881461067a578063ec732959146106c9578063ed33639f146106f4578063f178e47c14610735578063fc7e9c6f146107845761012a565b80639fa12d0b14610475578063b214faa514610550578063ba70f7571461057e578063c2b40ae4146105a9578063cd87a3b4146105f85761012a565b80636d9833e3116100f25780636d9833e3146102fe578063839df9451461034f5780638bca6d16146103a05780638ea3099e146103cb57806390eeb02b146104445761012a565b806317cc915c1461012f57806321a0adb6146101805780632b7ac3f314610261578063414a37ba146102a25780634ecf518b146102cd575b600080fd5b34801561013b57600080fd5b506101686004803603602081101561015257600080fd5b81019080803590602001909291905050506107b5565b60405180821515815260200191505060405180910390f35b61025f600480360360e081101561019657600080fd5b81019080803590602001906401000000008111156101b357600080fd5b8201836020820111156101c557600080fd5b803590602001918460018302840111640100000000831117156101e757600080fd5b90919293919293908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506107d5565b005b34801561026d57600080fd5b50610276610c75565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102ae57600080fd5b506102b7610c99565b6040518082815260200191505060405180910390f35b3480156102d957600080fd5b506102e2610cbd565b604051808263ffffffff16815260200191505060405180910390f35b34801561030a57600080fd5b506103376004803603602081101561032157600080fd5b8101908080359060200190929190505050610cd1565b60405180821515815260200191505060405180910390f35b34801561035b57600080fd5b506103886004803603602081101561037257600080fd5b8101908080359060200190929190505050610d6d565b60405180821515815260200191505060405180910390f35b3480156103ac57600080fd5b506103b5610d8d565b6040518082815260200191505060405180910390f35b3480156103d757600080fd5b5061042e600480360360608110156103ee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610d93565b6040518082815260200191505060405180910390f35b34801561045057600080fd5b5061045961103b565b604051808263ffffffff16815260200191505060405180910390f35b34801561048157600080fd5b506104f96004803603602081101561049857600080fd5b81019080803590602001906401000000008111156104b557600080fd5b8201836020820111156104c757600080fd5b803590602001918460208302840111640100000000831117156104e957600080fd5b9091929391929390505050611051565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561053c578082015181840152602081019050610521565b505050509050019250505060405180910390f35b61057c6004803603602081101561056657600080fd5b8101908080359060200190929190505050611102565b005b34801561058a57600080fd5b5061059361128d565b6040518082815260200191505060405180910390f35b3480156105b557600080fd5b506105e2600480360360208110156105cc57600080fd5b81019080803590602001909291905050506112c0565b6040518082815260200191505060405180910390f35b34801561060457600080fd5b5061060d6112d8565b604051808263ffffffff16815260200191505060405180910390f35b34801561063557600080fd5b506106626004803603602081101561064c57600080fd5b81019080803590602001909291905050506112dd565b60405180821515815260200191505060405180910390f35b34801561068657600080fd5b506106b36004803603602081101561069d57600080fd5b8101908080359060200190929190505050611307565b6040518082815260200191505060405180910390f35b3480156106d557600080fd5b506106de6119f9565b6040518082815260200191505060405180910390f35b34801561070057600080fd5b50610709611a1d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561074157600080fd5b5061076e6004803603602081101561075857600080fd5b8101908080359060200190929190505050611a41565b6040518082815260200191505060405180910390f35b34801561079057600080fd5b50610799611a59565b604051808263ffffffff16815260200191505060405180910390f35b60066020528060005260406000206000915054906101000a900460ff1681565b6002600454141561084e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b60026004819055506005548211156108ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4665652065786365656473207472616e736665722076616c756500000000000081525060200191505060405180910390fd5b6006600086815260200190815260200160002060009054906101000a900460ff1615610962576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f546865206e6f746520686173206265656e20616c7265616479207370656e740081525060200191505060405180910390fd5b61096b86610cd1565b6109dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f740000000081525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663695ef6f989896040518060c001604052808b60001c81526020018a60001c81526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b83811015610ab8578082015181840152602081019050610a9d565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b158015610b0a57600080fd5b505af1158015610b1e573d6000803e3d6000fd5b505050506040513d6020811015610b3457600080fd5b8101908080519060200190929190505050610bb7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c69642077697468647261772070726f6f660000000000000000000081525060200191505060405180910390fd5b60016006600087815260200190815260200160002060006101000a81548160ff021916908315150217905550610bef84848484611a6f565b8273ffffffffffffffffffffffffffffffffffffffff167fe9e508bad6d4c3227e881ca19068f099da81b5164dd6d62b2eaf1e8bc6c34931858785604051808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a260016004819055505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b60008054906101000a900463ffffffff1681565b60008060001b821415610ce75760009050610d68565b6000600360009054906101000a900463ffffffff16905060008190505b600260008263ffffffff16815260200190815260200160002054841415610d3057600192505050610d68565b60008163ffffffff161415610d4457601e90505b8080600190039150508163ffffffff168163ffffffff161415610d04576000925050505b919050565b60076020528060005260406000206000915054906101000a900460ff1681565b60055481565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018360001c10610e2d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5f6c6566742073686f756c6420626520696e7369646520746865206669656c6481525060200191505060405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018260001c10610ea8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611f7e6021913960400191505060405180910390fd5b60008360001c905060008573ffffffffffffffffffffffffffffffffffffffff1663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b158015610f0a57600080fd5b505afa158015610f1e573d6000803e3d6000fd5b505050506040513d6040811015610f3457600080fd5b81019080805190602001909291908051906020019092919050505080925081935050507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180610f7f57fe5b8460001c830891508573ffffffffffffffffffffffffffffffffffffffff1663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b158015610fdf57600080fd5b505afa158015610ff3573d6000803e3d6000fd5b505050506040513d604081101561100957600080fd5b81019080805190602001909291908051906020019092919050505080925081935050508160001b925050509392505050565b600360009054906101000a900463ffffffff1681565b60608282905067ffffffffffffffff8111801561106d57600080fd5b5060405190808252806020026020018201604052801561109c5781602001602082028036833780820191505090505b50905060005b838390508110156110fb576110c88484838181106110bc57fe5b905060200201356112dd565b156110ee5760018282815181106110db57fe5b6020026020010190151590811515815250505b80806001019150506110a2565b5092915050565b6002600454141561117b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b60026004819055506007600082815260200190815260200160002060009054906101000a900460ff16156111fa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611fd36021913960400191505060405180910390fd5b600061120582611cb4565b905060016007600084815260200190815260200160002060006101000a81548160ff02191690831515021790555061123b611ee9565b817fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff1968242604051808363ffffffff1681526020018281526020019250505060405180910390a250600160048190555050565b600060026000600360009054906101000a900463ffffffff1663ffffffff16815260200190815260200160002054905090565b60026020528060005260406000206000915090505481565b601e81565b60006006600083815260200190815260200160002060009054906101000a900460ff169050919050565b60008082141561133c577f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60001b90506119f4565b6001821415611370577f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d60001b90506119f4565b60028214156113a4577f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20060001b90506119f4565b60038214156113d8577f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb60001b90506119f4565b600482141561140c577f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c960001b90506119f4565b6005821415611440577f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495960001b90506119f4565b6006821415611474577f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c60001b90506119f4565b60078214156114a8577f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb460001b90506119f4565b60088214156114dc577f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8060001b90506119f4565b600982141561150f577e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00760001b90506119f4565b600a821415611543577f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3060001b90506119f4565b600b821415611577577f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e560001b90506119f4565b600c8214156115ab577f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f60001b90506119f4565b600d8214156115df577f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd60001b90506119f4565b600e821415611613577f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10860001b90506119f4565b600f821415611647577f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b660001b90506119f4565b601082141561167b577f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185460001b90506119f4565b60118214156116af577f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea60001b90506119f4565b60128214156116e3577f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d60001b90506119f4565b6013821415611717577f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0560001b90506119f4565b601482141561174b577f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d460001b90506119f4565b601582141561177f577f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296760001b90506119f4565b60168214156117b3577f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345360001b90506119f4565b60178214156117e7577f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4860001b90506119f4565b601882141561181b577f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd160001b90506119f4565b601982141561184f577f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c60001b90506119f4565b601a821415611883577f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9960001b90506119f4565b601b8214156118b7577f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35460001b90506119f4565b601c8214156118ea577e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d60001b90506119f4565b601d82141561191e577f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42760001b90506119f4565b601e821415611952577f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb60001b90506119f4565b601f821415611986577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc60001b90506119f4565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b919050565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020528060005260406000206000915090505481565b600360049054906101000a900463ffffffff1681565b60003414611ac8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603581526020018061206c6035913960400191505060405180910390fd5b60008114611b21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180611f9f6034913960400191505060405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16836005540360405180600001905060006040518083038185875af1925050503d8060008114611b85576040519150601f19603f3d011682016040523d82523d6000602084013e611b8a565b606091505b5050905080611be4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611ff46025913960400191505060405180910390fd5b6000831115611cad578373ffffffffffffffffffffffffffffffffffffffff168360405180600001905060006040518083038185875af1925050503d8060008114611c4b576040519150601f19603f3d011682016040523d82523d6000602084013e611c50565b606091505b50508091505080611cac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806120196023913960400191505060405180910390fd5b5b5050505050565b600080600360049054906101000a900463ffffffff16905060008054906101000a900463ffffffff1663ffffffff16600263ffffffff160a63ffffffff168163ffffffff161415611d50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061203c6030913960400191505060405180910390fd5b6000819050600084905060008060005b60008054906101000a900463ffffffff1663ffffffff168163ffffffff161015611e4757600060028663ffffffff1681611d9657fe5b0663ffffffff161415611dda57839250611db58163ffffffff16611307565b915083600160008363ffffffff16815260200190815260200160002081905550611dfa565b600160008263ffffffff1681526020019081526020016000205492508391505b611e257f00000000000000000000000000000000000000000000000000000000000000008484610d93565b935060028563ffffffff1681611e3757fe5b0494508080600101915050611d60565b506000601e63ffffffff166001600360009054906101000a900463ffffffff160163ffffffff1681611e7557fe5b06905080600360006101000a81548163ffffffff021916908363ffffffff16021790555083600260008363ffffffff1681526020019081526020016000208190555060018601600360046101000a81548163ffffffff021916908363ffffffff160217905550859650505050505050919050565b6005543414611f43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180611f466038913960400191505060405180910390fd5b56fe506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e5f72696768742073686f756c6420626520696e7369646520746865206669656c64526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e636554686520636f6d6d69746d656e7420686173206265656e207375626d69747465647061796d656e7420746f205f726563697069656e7420646964206e6f7420676f20746872757061796d656e7420746f205f72656c6179657220646964206e6f7420676f20746872754d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e2062652061646465644d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365a2646970667358221220fe7102e9dd4f1b26396f8a32eea9060be2c8f064751eef45fe5f7b4ed24ce3b264736f6c6343000700003364656e6f6d696e6174696f6e2073686f756c642062652067726561746572207468616e20305f6c6576656c732073686f756c642062652067726561746572207468616e207a65726f",
  "deployedBytecode": "0x60806040526004361061012a5760003560e01c80639fa12d0b116100ab578063e5285dcc1161006f578063e5285dcc14610629578063e82955881461067a578063ec732959146106c9578063ed33639f146106f4578063f178e47c14610735578063fc7e9c6f146107845761012a565b80639fa12d0b14610475578063b214faa514610550578063ba70f7571461057e578063c2b40ae4146105a9578063cd87a3b4146105f85761012a565b80636d9833e3116100f25780636d9833e3146102fe578063839df9451461034f5780638bca6d16146103a05780638ea3099e146103cb57806390eeb02b146104445761012a565b806317cc915c1461012f57806321a0adb6146101805780632b7ac3f314610261578063414a37ba146102a25780634ecf518b146102cd575b600080fd5b34801561013b57600080fd5b506101686004803603602081101561015257600080fd5b81019080803590602001909291905050506107b5565b60405180821515815260200191505060405180910390f35b61025f600480360360e081101561019657600080fd5b81019080803590602001906401000000008111156101b357600080fd5b8201836020820111156101c557600080fd5b803590602001918460018302840111640100000000831117156101e757600080fd5b90919293919293908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506107d5565b005b34801561026d57600080fd5b50610276610c75565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102ae57600080fd5b506102b7610c99565b6040518082815260200191505060405180910390f35b3480156102d957600080fd5b506102e2610cbd565b604051808263ffffffff16815260200191505060405180910390f35b34801561030a57600080fd5b506103376004803603602081101561032157600080fd5b8101908080359060200190929190505050610cd1565b60405180821515815260200191505060405180910390f35b34801561035b57600080fd5b506103886004803603602081101561037257600080fd5b8101908080359060200190929190505050610d6d565b60405180821515815260200191505060405180910390f35b3480156103ac57600080fd5b506103b5610d8d565b6040518082815260200191505060405180910390f35b3480156103d757600080fd5b5061042e600480360360608110156103ee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610d93565b6040518082815260200191505060405180910390f35b34801561045057600080fd5b5061045961103b565b604051808263ffffffff16815260200191505060405180910390f35b34801561048157600080fd5b506104f96004803603602081101561049857600080fd5b81019080803590602001906401000000008111156104b557600080fd5b8201836020820111156104c757600080fd5b803590602001918460208302840111640100000000831117156104e957600080fd5b9091929391929390505050611051565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561053c578082015181840152602081019050610521565b505050509050019250505060405180910390f35b61057c6004803603602081101561056657600080fd5b8101908080359060200190929190505050611102565b005b34801561058a57600080fd5b5061059361128d565b6040518082815260200191505060405180910390f35b3480156105b557600080fd5b506105e2600480360360208110156105cc57600080fd5b81019080803590602001909291905050506112c0565b6040518082815260200191505060405180910390f35b34801561060457600080fd5b5061060d6112d8565b604051808263ffffffff16815260200191505060405180910390f35b34801561063557600080fd5b506106626004803603602081101561064c57600080fd5b81019080803590602001909291905050506112dd565b60405180821515815260200191505060405180910390f35b34801561068657600080fd5b506106b36004803603602081101561069d57600080fd5b8101908080359060200190929190505050611307565b6040518082815260200191505060405180910390f35b3480156106d557600080fd5b506106de6119f9565b6040518082815260200191505060405180910390f35b34801561070057600080fd5b50610709611a1d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561074157600080fd5b5061076e6004803603602081101561075857600080fd5b8101908080359060200190929190505050611a41565b6040518082815260200191505060405180910390f35b34801561079057600080fd5b50610799611a59565b604051808263ffffffff16815260200191505060405180910390f35b60066020528060005260406000206000915054906101000a900460ff1681565b6002600454141561084e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b60026004819055506005548211156108ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4665652065786365656473207472616e736665722076616c756500000000000081525060200191505060405180910390fd5b6006600086815260200190815260200160002060009054906101000a900460ff1615610962576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f546865206e6f746520686173206265656e20616c7265616479207370656e740081525060200191505060405180910390fd5b61096b86610cd1565b6109dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f740000000081525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663695ef6f989896040518060c001604052808b60001c81526020018a60001c81526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b83811015610ab8578082015181840152602081019050610a9d565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b158015610b0a57600080fd5b505af1158015610b1e573d6000803e3d6000fd5b505050506040513d6020811015610b3457600080fd5b8101908080519060200190929190505050610bb7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c69642077697468647261772070726f6f660000000000000000000081525060200191505060405180910390fd5b60016006600087815260200190815260200160002060006101000a81548160ff021916908315150217905550610bef84848484611a6f565b8273ffffffffffffffffffffffffffffffffffffffff167fe9e508bad6d4c3227e881ca19068f099da81b5164dd6d62b2eaf1e8bc6c34931858785604051808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a260016004819055505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b60008054906101000a900463ffffffff1681565b60008060001b821415610ce75760009050610d68565b6000600360009054906101000a900463ffffffff16905060008190505b600260008263ffffffff16815260200190815260200160002054841415610d3057600192505050610d68565b60008163ffffffff161415610d4457601e90505b8080600190039150508163ffffffff168163ffffffff161415610d04576000925050505b919050565b60076020528060005260406000206000915054906101000a900460ff1681565b60055481565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018360001c10610e2d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5f6c6566742073686f756c6420626520696e7369646520746865206669656c6481525060200191505060405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018260001c10610ea8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611f7e6021913960400191505060405180910390fd5b60008360001c905060008573ffffffffffffffffffffffffffffffffffffffff1663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b158015610f0a57600080fd5b505afa158015610f1e573d6000803e3d6000fd5b505050506040513d6040811015610f3457600080fd5b81019080805190602001909291908051906020019092919050505080925081935050507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180610f7f57fe5b8460001c830891508573ffffffffffffffffffffffffffffffffffffffff1663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b158015610fdf57600080fd5b505afa158015610ff3573d6000803e3d6000fd5b505050506040513d604081101561100957600080fd5b81019080805190602001909291908051906020019092919050505080925081935050508160001b925050509392505050565b600360009054906101000a900463ffffffff1681565b60608282905067ffffffffffffffff8111801561106d57600080fd5b5060405190808252806020026020018201604052801561109c5781602001602082028036833780820191505090505b50905060005b838390508110156110fb576110c88484838181106110bc57fe5b905060200201356112dd565b156110ee5760018282815181106110db57fe5b6020026020010190151590811515815250505b80806001019150506110a2565b5092915050565b6002600454141561117b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b60026004819055506007600082815260200190815260200160002060009054906101000a900460ff16156111fa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611fd36021913960400191505060405180910390fd5b600061120582611cb4565b905060016007600084815260200190815260200160002060006101000a81548160ff02191690831515021790555061123b611ee9565b817fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff1968242604051808363ffffffff1681526020018281526020019250505060405180910390a250600160048190555050565b600060026000600360009054906101000a900463ffffffff1663ffffffff16815260200190815260200160002054905090565b60026020528060005260406000206000915090505481565b601e81565b60006006600083815260200190815260200160002060009054906101000a900460ff169050919050565b60008082141561133c577f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60001b90506119f4565b6001821415611370577f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d60001b90506119f4565b60028214156113a4577f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20060001b90506119f4565b60038214156113d8577f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb60001b90506119f4565b600482141561140c577f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c960001b90506119f4565b6005821415611440577f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495960001b90506119f4565b6006821415611474577f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c60001b90506119f4565b60078214156114a8577f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb460001b90506119f4565b60088214156114dc577f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8060001b90506119f4565b600982141561150f577e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00760001b90506119f4565b600a821415611543577f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3060001b90506119f4565b600b821415611577577f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e560001b90506119f4565b600c8214156115ab577f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f60001b90506119f4565b600d8214156115df577f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd60001b90506119f4565b600e821415611613577f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10860001b90506119f4565b600f821415611647577f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b660001b90506119f4565b601082141561167b577f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185460001b90506119f4565b60118214156116af577f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea60001b90506119f4565b60128214156116e3577f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d60001b90506119f4565b6013821415611717577f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0560001b90506119f4565b601482141561174b577f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d460001b90506119f4565b601582141561177f577f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296760001b90506119f4565b60168214156117b3577f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345360001b90506119f4565b60178214156117e7577f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4860001b90506119f4565b601882141561181b577f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd160001b90506119f4565b601982141561184f577f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c60001b90506119f4565b601a821415611883577f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9960001b90506119f4565b601b8214156118b7577f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35460001b90506119f4565b601c8214156118ea577e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d60001b90506119f4565b601d82141561191e577f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42760001b90506119f4565b601e821415611952577f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb60001b90506119f4565b601f821415611986577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc60001b90506119f4565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b919050565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020528060005260406000206000915090505481565b600360049054906101000a900463ffffffff1681565b60003414611ac8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603581526020018061206c6035913960400191505060405180910390fd5b60008114611b21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180611f9f6034913960400191505060405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16836005540360405180600001905060006040518083038185875af1925050503d8060008114611b85576040519150601f19603f3d011682016040523d82523d6000602084013e611b8a565b606091505b5050905080611be4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611ff46025913960400191505060405180910390fd5b6000831115611cad578373ffffffffffffffffffffffffffffffffffffffff168360405180600001905060006040518083038185875af1925050503d8060008114611c4b576040519150601f19603f3d011682016040523d82523d6000602084013e611c50565b606091505b50508091505080611cac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806120196023913960400191505060405180910390fd5b5b5050505050565b600080600360049054906101000a900463ffffffff16905060008054906101000a900463ffffffff1663ffffffff16600263ffffffff160a63ffffffff168163ffffffff161415611d50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061203c6030913960400191505060405180910390fd5b6000819050600084905060008060005b60008054906101000a900463ffffffff1663ffffffff168163ffffffff161015611e4757600060028663ffffffff1681611d9657fe5b0663ffffffff161415611dda57839250611db58163ffffffff16611307565b915083600160008363ffffffff16815260200190815260200160002081905550611dfa565b600160008263ffffffff1681526020019081526020016000205492508391505b611e257f00000000000000000000000000000000000000000000000000000000000000008484610d93565b935060028563ffffffff1681611e3757fe5b0494508080600101915050611d60565b506000601e63ffffffff166001600360009054906101000a900463ffffffff160163ffffffff1681611e7557fe5b06905080600360006101000a81548163ffffffff021916908363ffffffff16021790555083600260008363ffffffff1681526020019081526020016000208190555060018601600360046101000a81548163ffffffff021916908363ffffffff160217905550859650505050505050919050565b6005543414611f43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180611f466038913960400191505060405180910390fd5b56fe506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e5f72696768742073686f756c6420626520696e7369646520746865206669656c64526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e636554686520636f6d6d69746d656e7420686173206265656e207375626d69747465647061796d656e7420746f205f726563697069656e7420646964206e6f7420676f20746872757061796d656e7420746f205f72656c6179657220646964206e6f7420676f20746872754d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e2062652061646465644d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365a2646970667358221220fe7102e9dd4f1b26396f8a32eea9060be2c8f064751eef45fe5f7b4ed24ce3b264736f6c63430007000033",
  "immutableReferences": {
    "390": [
      {
        "length": 32,
        "start": 6687
      },
      {
        "length": 32,
        "start": 7679
      }
    ],
    "1092": [
      {
        "length": 32,
        "start": 2527
      },
      {
        "length": 32,
        "start": 3191
      }
    ]
  },
  "sourceMap": "845:1003:2:-:0;;;1782:1:4;1749:34;;;;;;;;;;;;;;;;;;;;1813:1;1787:27;;;;;;;;;;;;;;;;;;;;880:183:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1007:9;1018:7;1027:13;1042:17;1207::6;1226:7;1888:1:4;1878:7;:11;;;1870:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1953:2;1943:7;:12;;;1935:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2005:7;1996:6;;:16;;;;;;;;;;;;;;;;;;2027:7;2018:16;;;;;;;;;;;;2046:8;2041:80;2064:7;2060:11;;:1;:11;;;2041:80;;;2106:8;2112:1;2106:8;;:5;;;:8;;:::i;:::-;2086:14;:17;2101:1;2086:17;;;;;;;;;;;;;:28;;;;2073:3;;;;;;;2041:80;;;;2138:18;2154:1;2144:7;:11;2138:18;;:5;;;:18;;:::i;:::-;2127:5;:8;2133:1;2127:8;;;;;;;;;;;:29;;;;1819:342;;1645:1:14;1760:7;:22;;;;1265:1:6::1;1249:13;:17;1241:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1325:9;1314:20;;;;;;;;;;::::0;::::1;1355:13;1340:12;:28;;;;1066:307:::0;;;;880:183:2;;;;845:1003;;4296:3478:4;4343:7;4367:1;4362;:6;4358:3411;;;4385:66;4377:75;;4370:82;;;;4358:3411;4472:1;4467;:6;4463:3306;;;4490:66;4482:75;;4475:82;;;;4463:3306;4577:1;4572;:6;4568:3201;;;4595:66;4587:75;;4580:82;;;;4568:3201;4682:1;4677;:6;4673:3096;;;4700:66;4692:75;;4685:82;;;;4673:3096;4787:1;4782;:6;4778:2991;;;4805:66;4797:75;;4790:82;;;;4778:2991;4892:1;4887;:6;4883:2886;;;4910:66;4902:75;;4895:82;;;;4883:2886;4997:1;4992;:6;4988:2781;;;5015:66;5007:75;;5000:82;;;;4988:2781;5102:1;5097;:6;5093:2676;;;5120:66;5112:75;;5105:82;;;;5093:2676;5207:1;5202;:6;5198:2571;;;5225:66;5217:75;;5210:82;;;;5198:2571;5312:1;5307;:6;5303:2466;;;5330:66;5322:75;;5315:82;;;;5303:2466;5417:2;5412:1;:7;5408:2361;;;5436:66;5428:75;;5421:82;;;;5408:2361;5523:2;5518:1;:7;5514:2255;;;5542:66;5534:75;;5527:82;;;;5514:2255;5629:2;5624:1;:7;5620:2149;;;5648:66;5640:75;;5633:82;;;;5620:2149;5735:2;5730:1;:7;5726:2043;;;5754:66;5746:75;;5739:82;;;;5726:2043;5841:2;5836:1;:7;5832:1937;;;5860:66;5852:75;;5845:82;;;;5832:1937;5947:2;5942:1;:7;5938:1831;;;5966:66;5958:75;;5951:82;;;;5938:1831;6053:2;6048:1;:7;6044:1725;;;6072:66;6064:75;;6057:82;;;;6044:1725;6159:2;6154:1;:7;6150:1619;;;6178:66;6170:75;;6163:82;;;;6150:1619;6265:2;6260:1;:7;6256:1513;;;6284:66;6276:75;;6269:82;;;;6256:1513;6371:2;6366:1;:7;6362:1407;;;6390:66;6382:75;;6375:82;;;;6362:1407;6477:2;6472:1;:7;6468:1301;;;6496:66;6488:75;;6481:82;;;;6468:1301;6583:2;6578:1;:7;6574:1195;;;6602:66;6594:75;;6587:82;;;;6574:1195;6689:2;6684:1;:7;6680:1089;;;6708:66;6700:75;;6693:82;;;;6680:1089;6795:2;6790:1;:7;6786:983;;;6814:66;6806:75;;6799:82;;;;6786:983;6901:2;6896:1;:7;6892:877;;;6920:66;6912:75;;6905:82;;;;6892:877;7007:2;7002:1;:7;6998:771;;;7026:66;7018:75;;7011:82;;;;6998:771;7113:2;7108:1;:7;7104:665;;;7132:66;7124:75;;7117:82;;;;7104:665;7219:2;7214:1;:7;7210:559;;;7238:66;7230:75;;7223:82;;;;7210:559;7325:2;7320:1;:7;7316:453;;;7344:66;7336:75;;7329:82;;;;7316:453;7431:2;7426:1;:7;7422:347;;;7450:66;7442:75;;7435:82;;;;7422:347;7537:2;7532:1;:7;7528:241;;;7556:66;7548:75;;7541:82;;;;7528:241;7643:2;7638:1;:7;7634:135;;;7662:66;7654:75;;7647:82;;;;7634:135;7740:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4296:3478;;;;:::o;845:1003:2:-;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "845:1003:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;419:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2449:855;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;348:35;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;978:114:4;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1289:20;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3677:394;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;561:43:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;387:27;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2233:480:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1749:34;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3743:298:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:324;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4117:94:4;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1656:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1700:45;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3565:117:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4296:3478:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1096:114;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1253:31;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1603:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1787:27;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;419:47:6;;;;;;;;;;;;;;;;;;;;;;:::o;2449:855::-;1688:1:14;2277:7;;:19;;2269:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;;;;2698:12:6::1;;2690:4;:20;;2682:59;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2756:15;:31;2772:14;2756:31;;;;;;;;;;;;;;;;;;;;;2755:32;2747:76;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2837:18;2849:5;2837:11;:18::i;:::-;2829:59;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2942:8;:20;;;2972:6;;2942:150;;;;;;;;2997:5;2989:14;;2942:150;;;;3013:14;3005:23;;2942:150;;;;3038:10;3030:19;;2942:150;;;;3059:8;3051:17;;2942:150;;;;3070:4;2942:150;;;;3076:7;2942:150;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;2927:203;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3171:4;3137:15;:31;3153:14;3137:31;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;3181:53;3198:10;3210:8;3220:4;3226:7;3181:16;:53::i;:::-;3284:8;3245:54;;;3256:10;3268:14;3294:4;3245:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1645:1:14::0;2580:7;:22;;;;2449:855:6;;;;;;;;:::o;348:35::-;;;:::o;978:114:4:-;1015:77;978:114;:::o;1289:20::-;;;;;;;;;;;;:::o;3677:394::-;3734:4;3759:1;3750:10;;:5;:10;3746:43;;;3777:5;3770:12;;;;3746:43;3794:24;3821:16;;;;;;;;;;;3794:43;;3843:8;3854:17;3843:28;;3877:172;3901:5;:8;3907:1;3901:8;;;;;;;;;;;;;;3892:5;:17;3888:53;;;3928:4;3921:11;;;;;;3888:53;3957:1;3952;:6;;;3948:52;;;1743:2;3970:21;;3948:52;4007:3;;;;;;;;4030:17;4025:22;;:1;:22;;;;3877:172;;4061:5;4054:12;;;;3677:394;;;;:::o;561:43:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;387:27::-;;;;:::o;2233:480:4:-;2341:7;1015:77;2372:5;2364:14;;:27;2356:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1015:77;2450:6;2442:15;;:28;2434:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2514:9;2534:5;2526:14;;2514:26;;2546:9;2574:7;:18;;;2593:1;2596;2574:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:33;;;;;;;;1015:77;2608:38;;;;;2626:6;2618:15;;2615:1;2608:38;2604:42;;2661:7;:18;;;2680:1;2683;2661:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2652:33;;;;;;;;2706:1;2698:10;;2691:17;;;;2233:480;;;;;:::o;1749:34::-;;;;;;;;;;;;;:::o;3743:298:6:-;3825:19;3871:16;;:23;;3860:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3852:43;;3906:9;3901:136;3925:16;;:23;;3921:1;:27;3901:136;;;3967:28;3975:16;;3992:1;3975:19;;;;;;;;;;;;;3967:7;:28::i;:::-;3963:68;;;4018:4;4007:5;4013:1;4007:8;;;;;;;;;;;;;:15;;;;;;;;;;;3963:68;3950:3;;;;;;;3901:136;;;;3743:298;;;;:::o;1621:324::-;1688:1:14;2277:7;;:19;;2269:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;;;;1704:11:6::1;:24;1716:11;1704:24;;;;;;;;;;;;;;;;;;;;;1703:25;1695:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1773:20;1796;1804:11;1796:7;:20::i;:::-;1773:43;;1849:4;1822:11;:24;1834:11;1822:24;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1859:17;:15;:17::i;:::-;1896:11;1888:52;1909:13;1924:15;1888:52;;;;;;;;;;;;;;;;;;;;;;;;;;2436:1:14;1645::::0;2580:7;:22;;;;1621:324:6;:::o;4117:94:4:-;4161:7;4183:5;:23;4189:16;;;;;;;;;;;4183:23;;;;;;;;;;;;;;4176:30;;4117:94;:::o;1656:40::-;;;;;;;;;;;;;;;;;:::o;1700:45::-;1743:2;1700:45;:::o;3565:117:6:-;3627:4;3646:15;:31;3662:14;3646:31;;;;;;;;;;;;;;;;;;;;;3639:38;;3565:117;;;:::o;4296:3478:4:-;4343:7;4367:1;4362;:6;4358:3411;;;4385:66;4377:75;;4370:82;;;;4358:3411;4472:1;4467;:6;4463:3306;;;4490:66;4482:75;;4475:82;;;;4463:3306;4577:1;4572;:6;4568:3201;;;4595:66;4587:75;;4580:82;;;;4568:3201;4682:1;4677;:6;4673:3096;;;4700:66;4692:75;;4685:82;;;;4673:3096;4787:1;4782;:6;4778:2991;;;4805:66;4797:75;;4790:82;;;;4778:2991;4892:1;4887;:6;4883:2886;;;4910:66;4902:75;;4895:82;;;;4883:2886;4997:1;4992;:6;4988:2781;;;5015:66;5007:75;;5000:82;;;;4988:2781;5102:1;5097;:6;5093:2676;;;5120:66;5112:75;;5105:82;;;;5093:2676;5207:1;5202;:6;5198:2571;;;5225:66;5217:75;;5210:82;;;;5198:2571;5312:1;5307;:6;5303:2466;;;5330:66;5322:75;;5315:82;;;;5303:2466;5417:2;5412:1;:7;5408:2361;;;5436:66;5428:75;;5421:82;;;;5408:2361;5523:2;5518:1;:7;5514:2255;;;5542:66;5534:75;;5527:82;;;;5514:2255;5629:2;5624:1;:7;5620:2149;;;5648:66;5640:75;;5633:82;;;;5620:2149;5735:2;5730:1;:7;5726:2043;;;5754:66;5746:75;;5739:82;;;;5726:2043;5841:2;5836:1;:7;5832:1937;;;5860:66;5852:75;;5845:82;;;;5832:1937;5947:2;5942:1;:7;5938:1831;;;5966:66;5958:75;;5951:82;;;;5938:1831;6053:2;6048:1;:7;6044:1725;;;6072:66;6064:75;;6057:82;;;;6044:1725;6159:2;6154:1;:7;6150:1619;;;6178:66;6170:75;;6163:82;;;;6150:1619;6265:2;6260:1;:7;6256:1513;;;6284:66;6276:75;;6269:82;;;;6256:1513;6371:2;6366:1;:7;6362:1407;;;6390:66;6382:75;;6375:82;;;;6362:1407;6477:2;6472:1;:7;6468:1301;;;6496:66;6488:75;;6481:82;;;;6468:1301;6583:2;6578:1;:7;6574:1195;;;6602:66;6594:75;;6587:82;;;;6574:1195;6689:2;6684:1;:7;6680:1089;;;6708:66;6700:75;;6693:82;;;;6680:1089;6795:2;6790:1;:7;6786:983;;;6814:66;6806:75;;6799:82;;;;6786:983;6901:2;6896:1;:7;6892:877;;;6920:66;6912:75;;6905:82;;;;6892:877;7007:2;7002:1;:7;6998:771;;;7026:66;7018:75;;7011:82;;;;6998:771;7113:2;7108:1;:7;7104:665;;;7132:66;7124:75;;7117:82;;;;7104:665;7219:2;7214:1;:7;7210:559;;;7238:66;7230:75;;7223:82;;;;7210:559;7325:2;7320:1;:7;7316:453;;;7344:66;7336:75;;7329:82;;;;7316:453;7431:2;7426:1;:7;7422:347;;;7450:66;7442:75;;7435:82;;;;7422:347;7537:2;7532:1;:7;7528:241;;;7556:66;7548:75;;7541:82;;;;7528:241;7643:2;7638:1;:7;7634:135;;;7662:66;7654:75;;7647:82;;;;7634:135;7740:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4296:3478;;;;:::o;1096:114::-;1133:77;1096:114;:::o;1253:31::-;;;:::o;1603:49::-;;;;;;;;;;;;;;;;;:::o;1787:27::-;;;;;;;;;;;;;:::o;1221:625:2:-;1418:1;1405:9;:14;1397:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1502:1;1491:7;:12;1483:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:12;1586:10;:15;;1625:4;1610:12;;:19;1586:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1567:68;;;1649:7;1641:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1715:1;1708:4;:8;1704:138;;;1740:8;:13;;1762:4;1740:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1726:46;;;;;1788:7;1780:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1704:138;1221:625;;;;;:::o;2717:888:4:-;2767:12;2787:17;2807:9;;;;;;;;;;;2787:29;;2855:6;;;;;;;;;;2844:17;;2851:1;2844:17;;;2830:31;;:10;:31;;;;2822:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2920:19;2942:10;2920:32;;2958:24;2985:5;2958:32;;2996:12;3014:13;3039:8;3034:360;3057:6;;;;;;;;;;3053:10;;:1;:10;;;3034:360;;;3102:1;3097;3082:12;:16;;;;;;;;:21;;;3078:224;;;3122:16;3115:23;;3156:8;3162:1;3156:8;;:5;:8::i;:::-;3148:16;;3194;3174:14;:17;3189:1;3174:17;;;;;;;;;;;;;:36;;;;3078:224;;;3242:14;:17;3257:1;3242:17;;;;;;;;;;;;;;3235:24;;3277:16;3269:24;;3078:224;3328:34;3342:6;3350:4;3356:5;3328:13;:34::i;:::-;3309:53;;3386:1;3370:17;;;;;;;;;;;3065:3;;;;;;;3034:360;;;;3400:19;1743:2;3422:42;;3442:1;3423:16;;;;;;;;;;;:20;3422:42;;;;;;;;3400:64;;3489:12;3470:16;;:31;;;;;;;;;;;;;;;;;;3529:16;3507:5;:19;3513:12;3507:19;;;;;;;;;;;;;:38;;;;3576:1;3563:10;:14;3551:9;;:26;;;;;;;;;;;;;;;;;;3590:10;3583:17;;;;;;;;2717:888;;;:::o;1067:150:2:-;1139:12;;1126:9;:25;1118:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1067:150::o",
  "source": "// https://tornado.cash\n/*\n * d888888P                                           dP              a88888b.                   dP\n *    88                                              88             d8'   `88                   88\n *    88    .d8888b. 88d888b. 88d888b. .d8888b. .d888b88 .d8888b.    88        .d8888b. .d8888b. 88d888b.\n *    88    88'  `88 88'  `88 88'  `88 88'  `88 88'  `88 88'  `88    88        88'  `88 Y8ooooo. 88'  `88\n *    88    88.  .88 88       88    88 88.  .88 88.  .88 88.  .88 dP Y8.   .88 88.  .88       88 88    88\n *    dP    `88888P' dP       dP    dP `88888P8 `88888P8 `88888P' 88  Y88888P' `88888P8 `88888P' dP    dP\n * ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n */\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport \"./Tornado.sol\";\n\ncontract ETHTornado is Tornado {\n  constructor(\n    IVerifier _verifier,\n    IHasher _hasher,\n    uint256 _denomination,\n    uint32 _merkleTreeHeight\n  ) Tornado(_verifier, _hasher, _denomination, _merkleTreeHeight) {}\n\n  function _processDeposit() internal override {\n    require(msg.value == denomination, \"Please send `mixDenomination` ETH along with transaction\");\n  }\n\n  function _processWithdraw(\n    address payable _recipient,\n    address payable _relayer,\n    uint256 _fee,\n    uint256 _refund\n  ) internal override {\n    // sanity checks\n    require(msg.value == 0, \"Message value is supposed to be zero for ETH instance\");\n    require(_refund == 0, \"Refund value is supposed to be zero for ETH instance\");\n\n    (bool success, ) = _recipient.call{ value: denomination - _fee }(\"\");\n    require(success, \"payment to _recipient did not go thru\");\n    if (_fee > 0) {\n      (success, ) = _relayer.call{ value: _fee }(\"\");\n      require(success, \"payment to _relayer did not go thru\");\n    }\n  }\n}",
  "sourcePath": "/Users/gautam/Documents/semilla-contracts/contracts/ETHTornado.sol",
  "ast": {
    "absolutePath": "/Users/gautam/Documents/semilla-contracts/contracts/ETHTornado.sol",
    "exportedSymbols": {
      "ETHTornado": [
        249
      ]
    },
    "id": 250,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 150,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "795:23:2"
      },
      {
        "absolutePath": "/Users/gautam/Documents/semilla-contracts/contracts/Tornado.sol",
        "file": "./Tornado.sol",
        "id": 151,
        "nodeType": "ImportDirective",
        "scope": 250,
        "sourceUnit": 1358,
        "src": "820:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 152,
              "name": "Tornado",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1357,
              "src": "868:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Tornado_$1357",
                "typeString": "contract Tornado"
              }
            },
            "id": 153,
            "nodeType": "InheritanceSpecifier",
            "src": "868:7:2"
          }
        ],
        "contractDependencies": [
          1037,
          1357,
          3642
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 249,
        "linearizedBaseContracts": [
          249,
          1357,
          3642,
          1037
        ],
        "name": "ETHTornado",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "1061:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 171,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 164,
                    "name": "_verifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 155,
                    "src": "1007:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$1086",
                      "typeString": "contract IVerifier"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 165,
                    "name": "_hasher",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 157,
                    "src": "1018:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$382",
                      "typeString": "contract IHasher"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 166,
                    "name": "_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 159,
                    "src": "1027:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 167,
                    "name": "_merkleTreeHeight",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 161,
                    "src": "1042:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 168,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 163,
                  "name": "Tornado",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1357,
                  "src": "999:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Tornado_$1357_$",
                    "typeString": "type(contract Tornado)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "999:61:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "_verifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 171,
                  "src": "897:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVerifier_$1086",
                    "typeString": "contract IVerifier"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 154,
                    "name": "IVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1086,
                    "src": "897:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$1086",
                      "typeString": "contract IVerifier"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "_hasher",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 171,
                  "src": "922:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHasher_$382",
                    "typeString": "contract IHasher"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 156,
                    "name": "IHasher",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 382,
                    "src": "922:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$382",
                      "typeString": "contract IHasher"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "_denomination",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 171,
                  "src": "943:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "_merkleTreeHeight",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 171,
                  "src": "970:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "891:107:2"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1061:0:2"
            },
            "scope": 249,
            "src": "880:183:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1195
            ],
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "1112:105:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 176,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1126:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1126:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 178,
                          "name": "denomination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1094,
                          "src": "1139:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1126:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e",
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1153:58:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                          "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                        },
                        "value": "Please send `mixDenomination` ETH along with transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                          "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                        }
                      ],
                      "id": 175,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1118:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1118:94:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "1118:94:2"
                }
              ]
            },
            "documentation": null,
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processDeposit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 173,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1103:8:2"
            },
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1091:2:2"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1112:0:2"
            },
            "scope": 249,
            "src": "1067:150:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1297
            ],
            "body": {
              "id": 247,
              "nodeType": "Block",
              "src": "1370:476:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 197,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1405:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1405:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1418:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1405:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1421:55:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        },
                        "value": "Message value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1397:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1397:80:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "1397:80:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 205,
                          "name": "_refund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 192,
                          "src": "1491:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1502:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1491:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1505:54:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        },
                        "value": "Refund value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1483:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:77:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:77:2"
                },
                {
                  "assignments": [
                    212,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 212,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 247,
                      "src": "1568:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 211,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1568:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 221,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1632:2:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 213,
                          "name": "_recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 186,
                          "src": "1586:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1586:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 215,
                            "name": "denomination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1094,
                            "src": "1610:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 216,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "1625:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1610:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1586:45:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1586:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1567:68:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 223,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "1649:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7061796d656e7420746f205f726563697069656e7420646964206e6f7420676f2074687275",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1658:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        },
                        "value": "payment to _recipient did not go thru"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        }
                      ],
                      "id": 222,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1641:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1641:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "1641:57:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "1708:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1715:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1708:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 246,
                  "nodeType": "IfStatement",
                  "src": "1704:138:2",
                  "trueBody": {
                    "id": 245,
                    "nodeType": "Block",
                    "src": "1718:124:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 230,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 212,
                                "src": "1727:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 231,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "1726:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "",
                                "id": 236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1769:2:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 232,
                                  "name": "_relayer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 188,
                                  "src": "1740:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1740:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "argumentTypes": null,
                                  "id": 234,
                                  "name": "_fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 190,
                                  "src": "1762:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "1740:28:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1740:32:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "1726:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 239,
                        "nodeType": "ExpressionStatement",
                        "src": "1726:46:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 241,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 212,
                              "src": "1788:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7061796d656e7420746f205f72656c6179657220646964206e6f7420676f2074687275",
                              "id": 242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1797:37:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              },
                              "value": "payment to _relayer did not go thru"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              }
                            ],
                            "id": 240,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1780:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1780:55:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 244,
                        "nodeType": "ExpressionStatement",
                        "src": "1780:55:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 248,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 194,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1361:8:2"
            },
            "parameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 248,
                  "src": "1252:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 248,
                  "src": "1284:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 248,
                  "src": "1314:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "_refund",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 248,
                  "src": "1332:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1246:105:2"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:0:2"
            },
            "scope": 249,
            "src": "1221:625:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 250,
        "src": "845:1003:2"
      }
    ],
    "src": "795:1053:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/gautam/Documents/semilla-contracts/contracts/ETHTornado.sol",
    "exportedSymbols": {
      "ETHTornado": [
        249
      ]
    },
    "id": 250,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 150,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "795:23:2"
      },
      {
        "absolutePath": "/Users/gautam/Documents/semilla-contracts/contracts/Tornado.sol",
        "file": "./Tornado.sol",
        "id": 151,
        "nodeType": "ImportDirective",
        "scope": 250,
        "sourceUnit": 1358,
        "src": "820:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 152,
              "name": "Tornado",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1357,
              "src": "868:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Tornado_$1357",
                "typeString": "contract Tornado"
              }
            },
            "id": 153,
            "nodeType": "InheritanceSpecifier",
            "src": "868:7:2"
          }
        ],
        "contractDependencies": [
          1037,
          1357,
          3642
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 249,
        "linearizedBaseContracts": [
          249,
          1357,
          3642,
          1037
        ],
        "name": "ETHTornado",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "1061:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 171,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 164,
                    "name": "_verifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 155,
                    "src": "1007:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$1086",
                      "typeString": "contract IVerifier"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 165,
                    "name": "_hasher",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 157,
                    "src": "1018:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$382",
                      "typeString": "contract IHasher"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 166,
                    "name": "_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 159,
                    "src": "1027:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 167,
                    "name": "_merkleTreeHeight",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 161,
                    "src": "1042:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 168,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 163,
                  "name": "Tornado",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1357,
                  "src": "999:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Tornado_$1357_$",
                    "typeString": "type(contract Tornado)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "999:61:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "_verifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 171,
                  "src": "897:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVerifier_$1086",
                    "typeString": "contract IVerifier"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 154,
                    "name": "IVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1086,
                    "src": "897:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$1086",
                      "typeString": "contract IVerifier"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "_hasher",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 171,
                  "src": "922:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHasher_$382",
                    "typeString": "contract IHasher"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 156,
                    "name": "IHasher",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 382,
                    "src": "922:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$382",
                      "typeString": "contract IHasher"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "_denomination",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 171,
                  "src": "943:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "_merkleTreeHeight",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 171,
                  "src": "970:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "891:107:2"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1061:0:2"
            },
            "scope": 249,
            "src": "880:183:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1195
            ],
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "1112:105:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 176,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1126:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1126:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 178,
                          "name": "denomination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1094,
                          "src": "1139:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1126:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e",
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1153:58:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                          "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                        },
                        "value": "Please send `mixDenomination` ETH along with transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                          "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                        }
                      ],
                      "id": 175,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1118:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1118:94:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "1118:94:2"
                }
              ]
            },
            "documentation": null,
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processDeposit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 173,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1103:8:2"
            },
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1091:2:2"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1112:0:2"
            },
            "scope": 249,
            "src": "1067:150:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1297
            ],
            "body": {
              "id": 247,
              "nodeType": "Block",
              "src": "1370:476:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 197,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1405:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1405:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1418:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1405:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1421:55:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        },
                        "value": "Message value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1397:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1397:80:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "1397:80:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 205,
                          "name": "_refund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 192,
                          "src": "1491:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1502:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1491:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1505:54:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        },
                        "value": "Refund value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1483:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:77:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:77:2"
                },
                {
                  "assignments": [
                    212,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 212,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 247,
                      "src": "1568:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 211,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1568:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 221,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1632:2:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 213,
                          "name": "_recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 186,
                          "src": "1586:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1586:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 215,
                            "name": "denomination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1094,
                            "src": "1610:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 216,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "1625:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1610:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1586:45:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1586:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1567:68:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 223,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "1649:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7061796d656e7420746f205f726563697069656e7420646964206e6f7420676f2074687275",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1658:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        },
                        "value": "payment to _recipient did not go thru"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        }
                      ],
                      "id": 222,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1641:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1641:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "1641:57:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "1708:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1715:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1708:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 246,
                  "nodeType": "IfStatement",
                  "src": "1704:138:2",
                  "trueBody": {
                    "id": 245,
                    "nodeType": "Block",
                    "src": "1718:124:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 230,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 212,
                                "src": "1727:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 231,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "1726:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "",
                                "id": 236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1769:2:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 232,
                                  "name": "_relayer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 188,
                                  "src": "1740:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1740:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "argumentTypes": null,
                                  "id": 234,
                                  "name": "_fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 190,
                                  "src": "1762:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "1740:28:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1740:32:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "1726:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 239,
                        "nodeType": "ExpressionStatement",
                        "src": "1726:46:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 241,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 212,
                              "src": "1788:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7061796d656e7420746f205f72656c6179657220646964206e6f7420676f2074687275",
                              "id": 242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1797:37:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              },
                              "value": "payment to _relayer did not go thru"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              }
                            ],
                            "id": 240,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1780:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1780:55:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 244,
                        "nodeType": "ExpressionStatement",
                        "src": "1780:55:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 248,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 194,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1361:8:2"
            },
            "parameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 248,
                  "src": "1252:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 248,
                  "src": "1284:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 248,
                  "src": "1314:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "_refund",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 248,
                  "src": "1332:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1246:105:2"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:0:2"
            },
            "scope": 249,
            "src": "1221:625:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 250,
        "src": "845:1003:2"
      }
    ],
    "src": "795:1053:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.0+commit.9e61f92b.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2022-01-24T05:21:26.224Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(bytes32)": {
        "details": "Deposit funds into the contract. The caller must send (for ETH) or approve (for ERC20) value equal to or `denomination` of this instance.",
        "params": {
          "_commitment": "the note commitment, which is PedersenHash(nullifier + secret)"
        }
      },
      "getLastRoot()": {
        "details": "Returns the last root"
      },
      "hashLeftRight(address,bytes32,bytes32)": {
        "details": "Hash 2 tree leaves, returns MiMC(_left, _right)"
      },
      "isKnownRoot(bytes32)": {
        "details": "Whether the root is present in the root history"
      },
      "isSpent(bytes32)": {
        "details": "whether a note is already spent "
      },
      "isSpentArray(bytes32[])": {
        "details": "whether an array of notes is already spent "
      },
      "withdraw(bytes,bytes32,bytes32,address,address,uint256,uint256)": {
        "details": "Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)"
      },
      "zeros(uint256)": {
        "details": "provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}